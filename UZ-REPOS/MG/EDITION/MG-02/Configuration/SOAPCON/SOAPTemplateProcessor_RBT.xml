<templates connector="SOAP">
  <macros>
    <!-- ==========================  REDIRECT CONNECTORS   ========================= -->
    <define name="_SMSCON_1" value="SMSCON_02_01" />
    <define name="_SMSCON_ISSA" value="SMSCON_02_ISSA" />
    <define name="_USSD_1" value="USSDCON_01_01" />
    <!-- ==========================  REDIRECT CONNECTORS   ========================= -->
    <!-- ==========================  SOAP SPECIAL   ========================= -->
    <define name="_GET_MOD_LANGUAGE" value="#{document('_ALLSERVICE_PATH')/ServiceList/Language/lang[_EXIST_MODULE/@value='${lang}']/@param}" />
    <!-- ==========================  SOAP SPECIAL   ========================= -->
    <!-- ==========================  SERVICE PROVISIONING  ========================= -->
    <define name="_GET_SERVICE_RESULT" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_${sDbresult}__GET_LANG}'='','#{if('#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@info_${sDbresult}__GET_LANG}'='','_GET_DBRESULT','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@info_${sDbresult}__GET_LANG}')}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_${sDbresult}__GET_LANG}')}" />
    <define name="_GET_CONFIRM_SERVICE_RESULT" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@info_${sDbresult}__GET_LANG}'='','#{if('#{document('_SERVICE_PATH')/ServiceList/Group[@name='#{document('_SERVICE_PATH')/ServiceList/GroupList/Item[@id='#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@group}']/@name}']/@info_${sDbresult}__GET_LANG}'='','_GET_DBRESULT','#{document('_SERVICE_PATH')/ServiceList/Group[@name='#{document('_SERVICE_PATH')/ServiceList/GroupList/Item[@id='#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@group}']/@name}']/@info_${sDbresult}__GET_LANG}')}','#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@info_${sDbresult}__GET_LANG}')}" />
    <define name="_SERVICE_CONFIRM_NAME" value="#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@service_name__GET_LANG}" />
    <define name="_SERVICE_TP_CNT" value="#{if(count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']/ivrcode)&gt;0,count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']/ivrcode),count(document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']/ivrcode))}" />
    <define name="_SERVICE_TP_ISAVAIL" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@available}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@available}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/tplist[1]/@available}')}" />
    <define name="_SERVICE_TP_NOTAVALINFO" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@info_notaval__GET_LANG}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@info_notaval__GET_LANG}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/tplist[1]/@info_notaval__GET_LANG}')}" />
    <define name="_SERVICE_CUSTLST_CNT" value="#{if(count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/customer[@value='${customer}']/@value)&gt;0,count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/customer[@value='${customer}']/@value),count(document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/customerlist[1]/customer[@value='${customer}']/@value))}" />
    <define name="_SERVICE_CUSTLST_ISAVAIL" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@available}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@available}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/customerlist[1]/@available}')}" />
    <define name="_SERVICE_CUSTLST_NOTAVAILINFO" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@info_notaval__GET_LANG}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@info_notaval__GET_LANG}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/customerlist[1]/@info_notaval__GET_LANG}')}" />
    <define name="_SERVICE_SRVBIND_CNT" value="#{if(count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service)&gt;0,count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service),count(document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service))}" />
    <define name="_SERVICE_SRVBIND_SRVCODE" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@service_code}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@service_code}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@service_code}')}" />
    <define name="_SERVICE_SRVBIND_SUBSR" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@subscription}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@subscription}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@subscription}')}" />
    <define name="_SERVICE_SRVBIND_STORE" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@store}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@store}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@store}')}" />
    <define name="_SERVICE_SRVBIND_INFO" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}')}" />
    <define name="_SERVICE_SUCCESSFUL_RESPONSE" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@successful_response}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@successful_response}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@successful_response}')}" />
    <define name="_SERVICE_CHECKBLOCK" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@check_block}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@check_block}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@check_block}')}" />
    <define name="_SERVICE_REDIRECT" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@redirect}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@redirect}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@redirect}')}" />
    <define name="_SERVICE_AVAIL_BAL" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@availbalance}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@availbalance}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@availbalance}')}" />
    <define name="_SERVICE_TIMETOPROGRESS" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='#{if('${sServiceCode}'='','_SERVICE_CODE','${sServiceCode}')}']/@timetoprogress}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='#{if('${sGroupName}'='','_SERVICE_GROUPNAME','${sGroupName}')}']/@timetoprogress}','#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='#{if('${sServiceCode}'='','_SERVICE_CODE','${sServiceCode}')}']/@timetoprogress}')}" />
    <define name="_SERVICE_DATEFROM" value="#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@datefrom}" />
    <define name="_SERVICE_DATETO" value="#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@dateto}" />
    <define name="_SERVICE_NAME" value="#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@service_name__GET_LANG}" />
    <define name="_SERVICE_GROUPNAME" value="#{document('_SERVICE_PATH')/ServiceList/GroupList/Item[@id='#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@group}']/@name}" />
    <define name="_SERVICE_COMM_ACTION" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[_CURRENT_MODULE/@value='${sAction}']/@action}" />
    <define name="_SERVICE_COMM_STATUS" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[_CURRENT_MODULE/@value='${sAction}']/@status}" />
    <define name="_SERVICE_COMM_CODE" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[_CURRENT_MODULE/@value='${sAction}']/@code}" />
    <define name="_SERVICE_COMM_ACTPARCE" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[_CURRENT_MODULE/@value='${sAction}']/@parce}" />
    <define name="_SERVICE_CRMSTATUS" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[@status='${subscription}']/@parce}" />
    <define name="_SERVICE_CRMACTION_ADD" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[@action='2']/@parce}" />
    <define name="_SERVICE_CRMACTION_DEL" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[@action='3']/@parce}" />
    <define name="_SERVICE_CODE" value="#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@service_code}" />
    <!-- ==========================  SERVICE PROVISIONING  ========================= -->
    <!-- ==========================  CHANGE TP   ========================= -->
    <define name="_GET_TARIFF_RESULT" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@info_${sDbresult}__GET_LANG}'='','#{if('#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@info_${sDbresult}__GET_LANG}'='','_GET_DBRESULT','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@info_${sDbresult}__GET_LANG}')}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@info_${sDbresult}__GET_LANG}')}" />
    <define name="_GET_CONFIRM_TARIFF_RESULT" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@info_${sDbresult}__GET_LANG}'='','#{if('#{document('_TARIF_PATH')/TariffPlans/Group[@name='#{document('_TARIF_PATH')/TariffPlans/GroupList/Item[@id='#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@group}']/@name}']/@info_${sDbresult}__GET_LANG}'='','_GET_DBRESULT','#{document('_TARIF_PATH')/TariffPlans/Group[@name='#{document('_TARIF_PATH')/TariffPlans/GroupList/Item[@id='#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@group}']/@name}']/@info_${sDbresult}__GET_LANG}')}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@info_${sDbresult}__GET_LANG}')}" />
    <define name="_TARIFF_TP_CNT" value="#{if(count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}'])&gt;0,count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']),count(document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']))}" />
    <define name="_TARIFF_TP_ISAVAIL" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@available}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@available}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@available}')}" />
    <define name="_TARIFF_TP_NOTAVAILINFO" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@info_notaval__GET_LANG}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@info_notaval__GET_LANG}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@info_notaval__GET_LANG}')}" />
    <define name="_TARIFF_CUSTLST_CNT" value="#{if(count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/customer[@value='${customer}'])&gt;0,count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/customer[@value='${customer}']),count(document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/customerlist[1]/customer[@value='${customer}']))}" />
    <define name="_TARIFF_CUSTLST_ISAVAIL" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/@available}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/@available}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/customerlist[1]/@available}')}" />
    <define name="_TARIFF_CUSTLST_NOTAVAILINFO" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/@info_notaval__GET_LANG}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/@info_notaval__GET_LANG}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/customerlist[1]/@info_notaval__GET_LANG}')}" />
    <define name="_TARIFF_SRVBIND_CNT" value="#{if(count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service)&gt;0,count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service),count(document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service))}" />
    <define name="_TARIFF_SRVBIND_SRVCODE" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@service_code}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@service_code}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@service_code}')}" />
    <define name="_TARIFF_SRVBIND_SUBSR" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@subscription}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@subscription}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@subscription}')}" />
    <define name="_TARIFF_SRVBIND_STORE" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@store}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@store}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@store}')}" />
    <define name="_TARIFF_SRVBIND_INFO" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}')}" />
    <define name="_TARIFF_SUCCESSFUL_RESPONSE" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@successful_response}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@successful_response}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@successful_response}')}" />
    <define name="_TARIFF_CHECKBLOCK" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@check_block}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@check_block}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@check_block}')}" />
    <define name="_TARIFF_REDIRECT" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@redirect}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@redirect}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@redirect}')}" />
    <define name="_TARIFF_TIMETOPROGRESS" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[@ivrcode='#{if('${sTariffIvrCode}'='','_TARIFF_IVRCODE','${sTariffIvrCode}')}']/@timetoprogress}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='#{if('${sGroupName}'='','_TARIFF_GROUPNAME','${sGroupName}')}']/@timetoprogress}','#{document('_TARIF_PATH')/TariffPlans/Tariff[@ivrcode='#{if('${sTariffIvrCode}'='','_TARIFF_IVRCODE','${sTariffIvrCode}')}']/@timetoprogress}')}" />
    <define name="_TARIFF_AVAIL_BAL" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@availbalance}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@availbalance}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@availbalance}')}" />
    <define name="_TARIFF_DATEFROM" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@datefrom}" />
    <define name="_TARIFF_DATETO" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@dateto}" />
    <define name="_TARIFF_NAME" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@tariffname__GET_LANG}" />
    <define name="_TARIFF_GROUPNAME" value="#{document('_TARIF_PATH')/TariffPlans/GroupList/Item[@id='#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@group}']/@name}" />
    <define name="_TARIFF_CURRENT_NAME" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[@ivrcode='#{//Message/Item/@tariffplan}']/@tariffname__GET_LANG}" />
    <define name="_TARIFF_IVRCODE" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@ivrcode}" />
    <define name="_TARIFF_BALANCE_NAME" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[@ivrcode='${sTariffIvrCode}']/@tariffname__GET_LANG}" />
    <!-- ==========================  CHANGE TP  ========================= -->
    <!-- ==========================  ALL SERVICE   ========================= -->
    <define name="_COUNTERS_TYPE" value="#{document('_COUNTERS_PATH')/Counters/Group[_CURRENT_MODULE/@value='${sCountertype}']/@name}" />
    <define name="_GET_ALL_SRV_RESULT" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_${sDbresult}__GET_LANG}" />
    <define name="_ALLSERVICE_TP_CNT" value="count(document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}'])" />
    <define name="_ALLSERVICE_TP_ISAVAIL" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@available}" />
    <define name="_ALLSERVICE_TP_NOTAVAILINFO" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@info_notaval__GET_LANG}" />
    <define name="_ALLSERVICE_CUSTLST_CNT" value="count(document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/customer[@value='${customer}'])" />
    <define name="_ALLSERVICE_CUSTLST_ISAVAIL" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@available}" />
    <define name="_ALLSERVICE_CUSTLST_NOTAVAILINFO" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@info_notaval__GET_LANG}" />
    <define name="_ALLSERVICE_SRVBIND_CNT" value="count(document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service)" />
    <define name="_ALLSERVICE_SRVBIND_SRVCODE" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@service_code}" />
    <define name="_ALLSERVICE_SRVBIND_SUBSR" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@subscription}" />
    <define name="_ALLSERVICE_SRVBIND_STORE" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@store}" />
    <define name="_ALLSERVICE_SRVBIND_INFO" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}" />
    <define name="_ALLSERVICE_SUCCESSFUL_RESPONSE" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@successful_response}" />
    <define name="_ALLSERVICE_CHECKBLOCK" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@check_block}" />
    <define name="_ALLSERVICE_REDIRECT" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@redirect}" />
    <define name="_ALLSERVICE_TIMETOPROGRESS" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@timetoprogress}" />
    <define name="_ALLSERVICE_AVAIL_BAL" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@availbalance}" />
    <define name="_ALLSERVICE_NAME" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@name}" />
    <!-- ==========================  ALL SERVICE   ========================= -->
    <!-- ==========================  SETTINGS   ========================= -->
    <define name="_WAIT_IFASYNC_INPROCESS" value="#{if('${sDbresult}'='redirect','#{if(not(matches('${sInProgress}','_IF_TRUE')),'true','')}','')}" />
    <define name="_GET_TODAY" value="#{concat(substring('@{now}',7,4),substring('@{now}',4,2),substring('@{now}',1,2))}" />
    <define name="_GET_SECONDS" value="#{(number(substring('@{now}',12,2)) * 60 * 60) + (number(substring('@{now}',15,2)) * 60) + number(substring('@{now}',18,2))}" />
    <define name="_GET_DBRESULT" value="#{document('_DICTIONARY_PATH')/DBresults/Item[code/@value='${sDbresult}']/@info__GET_LANG}" />
    <define name="_GET_LENGTH_DBRESULT" value="#{string-length(document('_DICTIONARY_PATH')/DBresults/Item[code/@value='${sDbresult}']/@info__GET_LANG)}" />
    <define name="_GET_AFTER_VERIFY_DBRESULT" value="#{if('#{document('_DICTIONARY_PATH')/DBresults/Item[code/@value='${customerblocks}']/@info__GET_LANG}'!='','${customerblocks}','${dbresult}')}" />
    <define name="_ENCODING" value="#{document('_ALLSERVICE_PATH')/ServiceList/Language/lang[@param='_GET_LANG']/@encoding}" />
    <define name="_INLANGUAGE" value="#{if('#{document('_ALLSERVICE_PATH')/ServiceList/Language/lang[@scp='${inlang}' and @ussd='${smsussdlang}']/@param}'='','#{document('_ALLSERVICE_PATH')/ServiceList/Language/lang[@scp='' and @ussd='']/@param}','#{document('_ALLSERVICE_PATH')/ServiceList/Language/lang[@scp='${inlang}' and @ussd='${smsussdlang}']/@param}')}" />
    <define name="_GET_LANG" value="#{if('${sLang}'='','#{document('_ALLSERVICE_PATH')/ServiceList/Language/lang[@scp='' and @ussd='']/@param}','${sLang}')}" />
    <define name="_DEFAULT_ERR" value="#{if('${dbresult}'='-1','err001','${dbresult}')}" />
    <define name="_REDIRECT_TO_SMS" value="^[Ss][Mm][Ss]$" />
    <define name="_REDIRECT_TO_CURRENT" value="^[Nn][Oo][Tt][Rr][Ee][Dd][Ii][Rr][Ee][Cc][Tt]$" />
    <define name="_IF_TRUE" value="^([Tt][Rr][Uu][Ee]|1)$" />
    <define name="_BYCRM" value="[Bb][Yy][Cc][Rr][Mm]" />
    <define name="_CURRENT_MODULE" value="#{if('${sModule}'!='','${sModule}','_EXIST_MODULE')}" />
    <define name="_SERVICE_PATH" value="..\..\Config\Service\SERVICE.xml" />
    <define name="_ALLSERVICE_PATH" value="..\..\Config\Service\All_SERVICE.xml" />
    <define name="_TARIF_PATH" value="..\..\Config\Tariff\TARIFF_PLANS.xml" />
    <define name="_COUNTERS_PATH" value="..\..\Config\Service\COUNTERS.xml" />
    <define name="_DICTIONARY_PATH" value="..\..\Config\GET_DBRESULT.xml" />
    <define name="_DEALERPORTAL_PATH" value="..\..\Config\Portal\DealerUSSDPortal_01.xml" />
    <define name="_SERIES_PATH" value="..\..\Config\Service\SERIES.xml" />
    <define name="_EXIST_MODULE" value="rbt" />
    <define name="_CONFIRM_VALUE" value="confirm" />
    <define name="_CURRENT_INITIATOR" value="rbt" />
    <!-- ==========================  SETTINGS   ========================= -->
    <!-- ==========================  RBT   ========================= -->
    <define name="_RBT_PARCE_SERVICE" value="#{replace('${result}','(.*)_(\d{0,9})','$1')}" />
    <define name="_RBT_PARCE_QUANTITY" value="#{replace('${result}','(.*)_(\d{0,9})','$2')}" />
    <!-- ==========================  RBT   ========================= -->
  </macros>
  <template procedureName="ServiceProvisioning" sessionStorage="Memory" sessionLifetime="20">
    <receiveTemplate>
      <Message type="getlanguage" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(RBTSrvProv_${customer})}">
        <Item customer="${customer}" />
        @{store(sCustomer,${customer})}
        @{store(sAction,${action})}
        @{store(sService,${service})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,rbt)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_SERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="false@{store(sServiceCode,#{if(matches('${sInProgress}','_IF_TRUE'),'${sServiceCode}','_SERVICE_CODE')})}" />
    <deliveryTemplate conditionEx="false@{store(sGroupName,#{if(matches('${sInProgress}','_IF_TRUE'),'${sGroupName}','RBT')})}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sService}'='AVTOMBOFF' and '${sAction}'='3'}" call="AutoInetCheck" />
    <deliveryTemplate conditionEx="#{'${sServiceCode}'='' or '${sService}'='' or '${sCustomer}'=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sAction}'=''}" call="ServiceInterrogation">
      <set item="iparam:customer" value="${sCustomer}" />
      <set item="iparam:service" value="${sService}" />
      <set item="iparam:lang" value="_GET_LANG" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sAction}'='_CONFIRM_VALUE'}" call="ServiceProvisioning_Cnfrm_Step2" />
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE') and '${sServiceCode}'='_SERVICE_CODE' and '${sActParce}'='_SERVICE_COMM_ACTPARCE' and '${sActParce}'!=''}" call="ServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,alrprogress_${sActParce})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,inprogress_${sActParce})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_SERVICE_CUSTLST_CNT&gt;0 and not(matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_SERVICE_CUSTLST_CNT=0 and matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_SERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ServiceStringFormat">
      <set item="iparam:content" value="_SERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_GET_TODAY' &gt; '_SERVICE_DATETO'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,service_notavailable)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_GET_TODAY' &lt; '_SERVICE_DATEFROM'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,service_unavailable)}" />
      <set conditionEx="0@{store(sParams,_SERVICE_NAME;#{concat(substring('_SERVICE_DATEFROM',7,2),'.',substring('_SERVICE_DATEFROM',5,2),'.',substring('_SERVICE_DATEFROM',1,4))})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sService}'='FRPOLDOV' and '${sAction}'='2'}" call="PartialBlockLimitCheck" />
    <deliveryTemplate call="ServiceProvisioning_Inter_Step3" />
    <input>
      <param name="customer" />
      <param name="service" />
      <param name="action" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
      <param name="customer" />
      <param name="service" />
      <param name="lang" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Cnfrm_Step2" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="_SERVICE_CODE" action="interrogation" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '_SERVICE_CNFR_NAME'!=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,_CONFIRM_VALUE__SERVICE_CRMSTATUS)}" />
      <set conditionEx="0@{store(sParams,_SERVICE_CNFR_NAME)}" />
      <set item="iparam:content" value="_GET_CONFIRM_SERVICE_RESULT" />
    </deliveryTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Inter_Step3" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="${sServiceCode}" action="interrogation" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sActParce,_SERVICE_COMM_ACTPARCE)}" />
    <deliveryTemplate conditionEx="#{'${sService}'='FRCRBT' and '${sAction}'='3'}" call="RBT_Update_Quantity_FRGOODOK" />
    <deliveryTemplate conditionEx="#{'_SERVICE_COMM_STATUS'='${subscription}'}" call="RBT_Check_Service" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0' or '${sActParce}'='' or '${dbresult}'!='0' or '_SERVICE_COMM_STATUS'='' or '_SERVICE_COMM_ACTION'=''}" call="ServiceStringFormat">
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,329990)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_SERVICE_COMM_STATUS'='${subscription}'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,_SERVICE_COMM_CODE)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_SERVICE_REDIRECT','_REDIRECT_TO_CURRENT'))  and '_SERVICE_REDIRECT'!=''}" call="ServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_SERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndBal" />
    <deliveryTemplate conditionEx="#{_SERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndSrv" />
    <deliveryTemplate call="ServiceProvisioning_Vrf_Step4" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioningChckBndBal" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="getbalance">
          <Attribute name="unpayment" value="6" />
          <Attribute name="requestcountertype" value="0" />
          <Attribute name="rounding" value="4" />
        </Item>
        @{store(sIsBindBalAval,true)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100) &lt; _SERVICE_AVAIL_BAL}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,notavailbalance)}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_SERVICE_AVAIL_BAL and _SERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndSrv" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_SERVICE_AVAIL_BAL}" call="ServiceProvisioning_Vrf_Step4" />
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioningChckBndSrv" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        @{store(sCnt,#{if('${sCnt}'='',1,number('${sCnt}')+1)})}
        <Item customer="${sCustomer}">
          <Service id="_SERVICE_SRVBIND_SRVCODE" action="interrogation" />
        </Item>
        @{store(sIsBindSrvAval,true)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${subscription}'='_SERVICE_SRVBIND_SUBSR' and '_SERVICE_SRVBIND_INFO'!=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="_SERVICE_SRVBIND_INFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_SERVICE_SRVBIND_CNT and ${subscription}=_SERVICE_SRVBIND_SUBSR}" call="ServiceProvisioning_Vrf_Step4">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_SERVICE_SRVBIND_STORE','${sRequi};_SERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_SERVICE_SRVBIND_CNT and ${subscription}!=_SERVICE_SRVBIND_SUBSR}" call="ServiceProvisioning_Vrf_Step4" />
    <deliveryTemplate conditionEx="#{'${subscription}'!='_SERVICE_SRVBIND_SUBSR'}" call="ServiceProvisioningChckBndSrv" />
    <deliveryTemplate conditionEx="#{'${subscription}'='_SERVICE_SRVBIND_SUBSR'}" call="ServiceProvisioningChckBndSrv">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_SERVICE_SRVBIND_STORE','${sRequi};_SERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Vrf_Step4" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${sQuantity}'&gt;'0' and '${sAction}'='2'}" call="RBT_Update_Quantity" />
    <deliveryTemplate conditionEx="#{'${sQuantity}'&gt;'0' and '${sAction}'='3' and '${sService}'!='FRCRBT'}" call="RBT_Update_Quantity" />
    <deliveryTemplate conditionEx="#{'${sService}'='FRPOLDOV' and '${sAction}'='2' and '${customerblocks}'='FRPARTBL'}" call="ServiceProvisioning_Order_Step5" />
    <deliveryTemplate conditionEx="#{'${sService}'='FRPOLDOV' and '${sAction}'='3' and '${customerblocks}'='FRPARTBL'}" call="ServiceProvisioning_Order_Step5" />
    <deliveryTemplate conditionEx="#{('${customerblocks}'!='' or '${dbresult}'='320347') and matches('_SERVICE_CHECKBLOCK','_IF_TRUE')}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,_GET_AFTER_VERIFY_DBRESULT)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0' and '${dbresult}'!='320347'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_SERVICE_TP_CNT&gt;0 and not(matches('_SERVICE_TP_ISAVAIL','_IF_TRUE'))) or (_SERVICE_TP_CNT=0 and matches('_SERVICE_TP_ISAVAIL','_IF_TRUE'))) and '_SERVICE_TP_NOTAVALINFO'!=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sParams,_SERVICE_NAME;_TARIFF_CURRENT_NAME)}" />
      <set item="iparam:content" value="_SERVICE_TP_NOTAVALINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sGroupName}'='BMS'}" call="ServiceProvisioning_BMS_Step6" />
    <deliveryTemplate conditionEx="#{'${sGroupName}'='BLOCKS'}" call="ServiceProvisioning_Block_Step6" />
    <deliveryTemplate call="ServiceProvisioning_Order_Step5" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="RBT_Check_Service" handler="DBCON_02_01" sessionStorage="Memory" sessionLifetime="20" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.service_check_quantity">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_service" type="STRING" value="${sService}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sQuantity,_RBT_PARCE_QUANTITY)}" />
    <deliveryTemplate conditionEx="#{'_SERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndBal" />
    <deliveryTemplate conditionEx="#{_SERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndSrv" />
    <deliveryTemplate call="ServiceProvisioning_Vrf_Step4" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="RBT_Update_Quantity" handler="DBCON_02_01" sessionStorage="Memory" sessionLifetime="20" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.service_update_quantity">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_service" type="STRING" value="${sService}" />
          <Attribute name="p_action" type="STRING" value="${sAction}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${result}'='0'}" value="@{store(sDbresult,success_${sActParce})}" />
      <set item="iparam:content" conditionEx="#{'${result}'!='0'}" value="@{store(sDbresult,${result})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="RBT_Update_Quantity_FRGOODOK" handler="DBCON_02_01" sessionStorage="Memory" sessionLifetime="20" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.frgoodok_update_quantity">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceProvisioning_Vrf_Step4" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Order_Step5" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="${sServiceCode}" action="_SERVICE_COMM_ACTION" class="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success_${sActParce})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Block_Step6" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="blockphone" action="4">
            <Attribute name="state" value="_SERVICE_COMM_STATUS" />
            <Attribute name="start" value="#{substring('@{now}',1,10)}" />
          </Service>
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success_${sActParce})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_BMS_Step6" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="orderbonusgiftrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="giftcode" value="${sServiceCode}" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success_${sActParce})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceInterrogation" sessionStorage="Memory" sessionLifetime="20">
    <receiveTemplate>
      <Message type="getlanguage" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(RBTSrvInter_${customer})}">
        <Item customer="${customer}" />
        @{store(sCustomer,${customer})}
        @{store(sService,${service})}
        @{store(sServiceCode,_SERVICE_CODE)}
        @{store(sGroupName,_SERVICE_GROUPNAME)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,rbt)}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sServiceCode}'='' or '${sService}'='' or '${sCustomer}'=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_SERVICE_CUSTLST_CNT&gt;0 and not(matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_SERVICE_CUSTLST_CNT=0 and matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_SERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ServiceStringFormat">
      <set item="iparam:content" value="_SERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate call="ServiceInterrogation_Step2" />
    <input>
      <param name="customer" />
      <param name="service" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceInterrogation_Step2" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="${sServiceCode}" action="interrogation" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,service__SERVICE_CRMSTATUS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="PartialBlockLimitCheck" handler="DBCON_02_01" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="partial_block_limit_check">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='320208'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${result})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate call="ServiceProvisioning_Inter_Step3" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="AutoInetCheck" handler="DBCON_02_01" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="check_autoinet">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='320001'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${result})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sService,${result})}" />
    <deliveryTemplate conditionEx="false@{store(sServiceCode,#{if(matches('${sInProgress}','_IF_TRUE'),'${sServiceCode}','_SERVICE_CODE')})}" />
    <deliveryTemplate conditionEx="false@{store(sGroupName,#{if(matches('${sInProgress}','_IF_TRUE'),'${sGroupName}','_SERVICE_GROUPNAME')})}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <deliveryTemplate call="ServiceProvisioning_Inter_Step3" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceStringFormat" sessionStorage="Memory" sessionLifetime="20">
    <receiveTemplate>
      <Message type="stringformat" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="stringformat" value="#{if('${Content}'='','_GET_SERVICE_RESULT','${Content}')}@{store(SlowAsync,)}" />
          <Attribute name="params" value="${sParams}" />
          <Attribute name="split" value=";" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{not(matches('${sInProgress}','_IF_TRUE')) and ('${sDbresult}'='redirect' or matches('${SlowAsync}','_IF_TRUE'))}">
      <set conditionEx="0@{store(sInProgress,true)}" />
      <set conditionEx="0@{store(sStartSecond,_GET_SECONDS)}" />
      <set item="oparam:result" value="${no-escape:result}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sIsFreeSession,#{if(number(_SERVICE_TIMETOPROGRESS)&gt;0,'false','true')})}" />
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE') and matches('_SERVICE_REDIRECT','_REDIRECT_TO_SMS') and not(matches('${sDbresult}','inprogress_|alrprogress_|_CONFIRM_VALUE|inprogress'))}" connector="_SMSCON_1" />
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and matches('${sDbresult}','inprogress_|alrprogress_|_CONFIRM_VALUE|inprogress')}">
      <set item="oparam:result" value="${no-escape:result}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and (not(matches('${sDbresult}','success')) or matches('${sIsFreeSession}','_IF_TRUE'))}">
      <set item="oparam:result" value="${no-escape:result}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and not(matches('${sIsFreeSession}','_IF_TRUE'))}">
      <set conditionEx="0@{store(sStartSecond,_GET_SECONDS)}" />
      <set item="oparam:result" value="${no-escape:result}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${customer}'!='' and matches('@{SessionExists(${session_id})}','_IF_TRUE')}">
      <set conditionEx="0@{store(sDbresult,_DEFAULT_ERR)}" />
      <set item="oparam:result" value="_GET_DBRESULT" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="true@{freeSession}" dropReply="true" />
    <input>
      <param name="content" />
      <param name="storelog" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" />
    </output>
  </template>
  <template procedureName="CheckLanguage" sessionStorage="Memory" sessionLifetime="60">
    <receiveTemplate>
      <Message type="getlanguage" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(CheckINLang_${customer})}">
        <Item customer="${customer}" />
        @{store(sCustomer,${customer})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate>
      <set item="oparam:result" value="${sLang}" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
    </input>
    <output>
      <param name="result" />
      <param name="customer" />
    </output>
  </template>
  <template procedureName="GetInfo" persistent="false">
    <receiveTemplate>
      <Message type="convertencoding" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(@{newGuid})}">
        <Item customer="${customer}">
          <Content value="${message}" />
          <Sender value="${sender}" />
          <Recipient value="${recipient}" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate terminating="false">
      <set item="oparam:result" value="0" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'#{string-length('${Sender}')}'='12'}" connector="_SMSCON_ISSA" />
    <deliveryTemplate conditionEx="#{matches('${Sender}','[Uu][Ss][Ss][Dd]')}" connector="_USSD_1" />
    <deliveryTemplate connector="_SMSCON_1" />
    <input>
      <param name="sender" />
      <param name="recipient" />
      <param name="message" />
    </input>
    <output>
      <param name="result" />
    </output>
  </template>
  <template procedureName="TestRequest" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="getlanguage" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(@{newGuid})}">
        <Item customer="">
          <Content value="${message}" />
        </Item>
        @{store(sTest,${message})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="#{'${sTest}'='test12345'}">
      <set item="oparam:TEST1" value="ERR_1" />
      <set item="oparam:TEST2" value="${sTest}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sTest}'='test1' or '${sTest}'='test2'}">
      <set item="oparam:TEST1" value="#{if('#{document('temp\1.xml')/Test/Item[@name='${sTest}']/@result}'!='','#{document('temp\1.xml')/Test/Item[@name='${sTest}']/@result}','ERR_2')}" />
      <set item="oparam:TEST2" value="${sTest}" />
    </deliveryTemplate>
    <deliveryTemplate>
      <set item="oparam:TEST1" value="1=#{document('temp\1.xml')/Test/Item[@name='test1']/@result} 2=#{document('temp\1.xml')/Test/Item[@name='test2']/@result}" />
      <set item="oparam:TEST2" value="${sTest}" />
    </deliveryTemplate>
    <input>
      <param name="message" />
    </input>
    <output>
      <param name="TEST1" />
      <param name="TEST2" />
    </output>
  </template>
</templates>