<templates connector="SOAP">
  <macros>
    <!-- ==========================  REDIRECT CONNECTORS   ========================= -->
    <define name="_SMSCON_1" value="SMSCON_01_01" />
    <define name="_SMSCON_ISSA" value="SMSCON_01_ISSA" />
    <define name="_SMSCON_CONTENT" value="SMSCON_01_CONTENT" />
    <define name="_USSD_1" value="USSDCON_01_01" />
    <define name="_DBCON" value="DBCON_01_01" />
    <!-- ==========================  REDIRECT CONNECTORS   ========================= -->
    <!-- ==========================  SOAP SPECIAL   ========================= -->
    <define name="_GET_MOD_LANGUAGE" value="#{document('_DICTIONARY_PATH')/Dictionary/Language/Item[_EXIST_MODULE/@value='${lang}']/@param}" />
    <!-- ==========================  SOAP SPECIAL   ========================= -->
    <!-- ==========================  SERVICE PROVISIONING  ========================= -->
    <define name="_GET_SERVICE_RESULT" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_${sDbresult}__GET_LANG}'='','#{if('#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@info_${sDbresult}__GET_LANG}'='','_GET_DBRESULT','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@info_${sDbresult}__GET_LANG}')}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_${sDbresult}__GET_LANG}')}" />
    <define name="_GET_CONFIRM_SERVICE_RESULT" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@info_${sDbresult}__GET_LANG}'='','#{if('#{document('_SERVICE_PATH')/ServiceList/Group[@name='#{document('_SERVICE_PATH')/ServiceList/GroupList/Item[@id='#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@group}']/@name}']/@info_${sDbresult}__GET_LANG}'='','_GET_DBRESULT','#{document('_SERVICE_PATH')/ServiceList/Group[@name='#{document('_SERVICE_PATH')/ServiceList/GroupList/Item[@id='#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@group}']/@name}']/@info_${sDbresult}__GET_LANG}')}','#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@info_${sDbresult}__GET_LANG}')}" />
    <define name="_SERVICE_CONFIRM_NAME" value="#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='_SERVICE_CODE']/@service_name__GET_LANG}" />
    <define name="_SERVICE_TP_CNT" value="#{if(count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']/ivrcode)&gt;0,count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']/ivrcode),count(document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']/ivrcode))}" />
    <define name="_SERVICE_TP_ISAVAIL" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@available}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@available}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/tplist[1]/@available}')}" />
    <define name="_SERVICE_TP_NOTAVALINFO" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@info_notaval__GET_LANG}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@info_notaval__GET_LANG}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/tplist[1]/@info_notaval__GET_LANG}')}" />
    <define name="_SERVICE_CUSTLST_CNT" value="#{if(count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/customer[@value='${customer}']/@value)&gt;0,count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/customer[@value='${customer}']/@value),count(document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/customerlist[1]/customer[@value='${customer}']/@value))}" />
    <define name="_SERVICE_CUSTLST_ISAVAIL" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@available}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@available}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/customerlist[1]/@available}')}" />
    <define name="_SERVICE_CUSTLST_NOTAVAILINFO" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@info_notaval__GET_LANG}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@info_notaval__GET_LANG}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/customerlist[1]/@info_notaval__GET_LANG}')}" />
    <define name="_SERVICE_SRVBIND_CNT" value="#{if(count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service)&gt;0,count(document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service),count(document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service))}" />
    <define name="_SERVICE_SRVBIND_SRVCODE" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@service_code}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@service_code}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@service_code}')}" />
    <define name="_SERVICE_SRVBIND_SUBSR" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@subscription}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@subscription}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@subscription}')}" />
    <define name="_SERVICE_SRVBIND_STORE" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@store}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@store}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@store}')}" />
    <define name="_SERVICE_SRVBIND_INFO" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}'!='','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}')}" />
    <define name="_SERVICE_SUCCESSFUL_RESPONSE" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@successful_response}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@successful_response}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@successful_response}')}" />
    <define name="_SERVICE_CHECKBLOCK" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@check_block}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@check_block}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@check_block}')}" />
    <define name="_SERVICE_REDIRECT" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@redirect}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@redirect}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@redirect}')}" />
    <define name="_SERVICE_AVAIL_BAL" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@availbalance}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='${sGroupName}']/@availbalance}','#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@availbalance}')}" />
    <define name="_SERVICE_TIMETOPROGRESS" value="#{if('#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='#{if('${sServiceCode}'='','_SERVICE_CODE','${sServiceCode}')}']/@timetoprogress}'='','#{document('_SERVICE_PATH')/ServiceList/Group[@name='#{if('${sGroupName}'='','_SERVICE_GROUPNAME','${sGroupName}')}']/@timetoprogress}','#{document('_SERVICE_PATH')/ServiceList/Service[@service_code='#{if('${sServiceCode}'='','_SERVICE_CODE','${sServiceCode}')}']/@timetoprogress}')}" />
    <define name="_SERVICE_DATEFROM" value="#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@datefrom}" />
    <define name="_SERVICE_DATETO" value="#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@dateto}" />
    <define name="_SERVICE_NAME" value="#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@service_name__GET_LANG}" />
    <define name="_SERVICE_GROUPNAME" value="#{document('_SERVICE_PATH')/ServiceList/GroupList/Item[@id='#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@group}']/@name}" />
    <define name="_SERVICE_COMM_ACTION" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[_CURRENT_MODULE/@value='${sAction}']/@action}" />
    <define name="_SERVICE_COMM_STATUS" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[_CURRENT_MODULE/@value='${sAction}']/@status}" />
    <define name="_SERVICE_COMM_CODE" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[_CURRENT_MODULE/@value='${sAction}']/@code}" />
    <define name="_SERVICE_COMM_ACTPARCE" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[_CURRENT_MODULE/@value='${sAction}']/@parce}" />
    <define name="_SERVICE_CRMSTATUS" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[@status='${subscription}']/@parce}" />
    <define name="_SERVICE_CRMACTION_ADD" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[@action='2']/@parce}" />
    <define name="_SERVICE_CRMACTION_DEL" value="#{document('_SERVICE_PATH')/ServiceList/CommandList/Command[@action='3']/@parce}" />
    <define name="_SERVICE_CODE" value="#{document('_SERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@service_code}" />
    <!-- ==========================  SERVICE PROVISIONING  ========================= -->
    <!-- ==========================  CHANGE TP   ========================= -->
    <define name="_GET_TARIFF_RESULT" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@info_${sDbresult}__GET_LANG}'='','#{if('#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@info_${sDbresult}__GET_LANG}'='','_GET_DBRESULT','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@info_${sDbresult}__GET_LANG}')}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@info_${sDbresult}__GET_LANG}')}" />
    <define name="_GET_CONFIRM_TARIFF_RESULT" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@info_${sDbresult}__GET_LANG}'='','#{if('#{document('_TARIF_PATH')/TariffPlans/Group[@name='#{document('_TARIF_PATH')/TariffPlans/GroupList/Item[@id='#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@group}']/@name}']/@info_${sDbresult}__GET_LANG}'='','_GET_DBRESULT','#{document('_TARIF_PATH')/TariffPlans/Group[@name='#{document('_TARIF_PATH')/TariffPlans/GroupList/Item[@id='#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@group}']/@name}']/@info_${sDbresult}__GET_LANG}')}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@info_${sDbresult}__GET_LANG}')}" />
    <define name="_TARIFF_TP_CNT" value="#{if(count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}'])&gt;0,count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']),count(document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}']))}" />
    <define name="_TARIFF_TP_ISAVAIL" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@available}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@available}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@available}')}" />
    <define name="_TARIFF_TP_NOTAVAILINFO" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@info_notaval__GET_LANG}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@info_notaval__GET_LANG}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/tplist[1]/@info_notaval__GET_LANG}')}" />
    <define name="_TARIFF_CUSTLST_CNT" value="#{if(count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/customer[@value='${customer}'])&gt;0,count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/customer[@value='${customer}']),count(document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/customerlist[1]/customer[@value='${customer}']))}" />
    <define name="_TARIFF_CUSTLST_ISAVAIL" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/@available}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/@available}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/customerlist[1]/@available}')}" />
    <define name="_TARIFF_CUSTLST_NOTAVAILINFO" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/@info_notaval__GET_LANG}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/customerlist[1]/@info_notaval__GET_LANG}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/customerlist[1]/@info_notaval__GET_LANG}')}" />
    <define name="_TARIFF_SRVBIND_CNT" value="#{if(count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service)&gt;0,count(document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service),count(document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service))}" />
    <define name="_TARIFF_SRVBIND_SRVCODE" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@service_code}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@service_code}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@service_code}')}" />
    <define name="_TARIFF_SRVBIND_SUBSR" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@subscription}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@subscription}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@subscription}')}" />
    <define name="_TARIFF_SRVBIND_STORE" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@store}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@store}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@store}')}" />
    <define name="_TARIFF_SRVBIND_INFO" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}'!='','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}')}" />
    <define name="_TARIFF_SUCCESSFUL_RESPONSE" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@successful_response}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@successful_response}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@successful_response}')}" />
    <define name="_TARIFF_CHECKBLOCK" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@check_block}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@check_block}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@check_block}')}" />
    <define name="_TARIFF_REDIRECT" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@redirect}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@redirect}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@redirect}')}" />
    <define name="_TARIFF_TIMETOPROGRESS" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[@ivrcode='#{if('${sTariffIvrCode}'='','_TARIFF_IVRCODE','${sTariffIvrCode}')}']/@timetoprogress}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='#{if('${sGroupName}'='','_TARIFF_GROUPNAME','${sGroupName}')}']/@timetoprogress}','#{document('_TARIF_PATH')/TariffPlans/Tariff[@ivrcode='#{if('${sTariffIvrCode}'='','_TARIFF_IVRCODE','${sTariffIvrCode}')}']/@timetoprogress}')}" />
    <define name="_TARIFF_AVAIL_BAL" value="#{if('#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@availbalance}'='','#{document('_TARIF_PATH')/TariffPlans/Group[@name='${sGroupName}']/@availbalance}','#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@availbalance}')}" />
    <define name="_TARIFF_DATEFROM" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@datefrom}" />
    <define name="_TARIFF_DATETO" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@dateto}" />
    <define name="_TARIFF_NAME" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@tariffname__GET_LANG}" />
    <define name="_TARIFF_GROUPNAME" value="#{document('_TARIF_PATH')/TariffPlans/GroupList/Item[@id='#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@group}']/@name}" />
    <define name="_TARIFF_CURRENT_NAME" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[@ivrcode='#{//Message/Item/@tariffplan}']/@tariffname__GET_LANG}" />
    <define name="_TARIFF_IVRCODE" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[_CURRENT_MODULE/@value='${sNewTariffPlan}']/@ivrcode}" />
    <define name="_TARIFF_BALANCE_NAME" value="#{document('_TARIF_PATH')/TariffPlans/Tariff[@ivrcode='${sTariffIvrCode}']/@tariffname__GET_LANG}" />
    <!-- ==========================  CHANGE TP  ========================= -->
    <!-- ==========================  ALL SERVICE   ========================= -->
    <define name="_COUNTERS_TYPE" value="#{document('_COUNTERS_PATH')/Counters/Group[_CURRENT_MODULE/@value='${sCountertype}']/@name}" />
    <define name="_GET_ALL_SRV_RESULT" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_${sDbresult}__GET_LANG}" />
    <define name="_ALLSERVICE_TP_CNT" value="count(document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1][ivrcode/@value='#{//Message/Item/@tariffplan}'])" />
    <define name="_ALLSERVICE_TP_ISAVAIL" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@available}" />
    <define name="_ALLSERVICE_TP_NOTAVAILINFO" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/tplist[1]/@info_notaval__GET_LANG}" />
    <define name="_ALLSERVICE_CUSTLST_CNT" value="count(document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/customer[@value='${customer}'])" />
    <define name="_ALLSERVICE_CUSTLST_ISAVAIL" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@available}" />
    <define name="_ALLSERVICE_CUSTLST_NOTAVAILINFO" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/customerlist[1]/@info_notaval__GET_LANG}" />
    <define name="_ALLSERVICE_SRVBIND_CNT" value="count(document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service)" />
    <define name="_ALLSERVICE_SRVBIND_SRVCODE" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@service_code}" />
    <define name="_ALLSERVICE_SRVBIND_SUBSR" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@subscription}" />
    <define name="_ALLSERVICE_SRVBIND_STORE" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@store}" />
    <define name="_ALLSERVICE_SRVBIND_INFO" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/servicebindinglist[1]/service[${sCnt}]/@info_notaval__GET_LANG}" />
    <define name="_ALLSERVICE_SUCCESSFUL_RESPONSE" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@successful_response}" />
    <define name="_ALLSERVICE_CHECKBLOCK" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@check_block}" />
    <define name="_ALLSERVICE_REDIRECT" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@redirect}" />
    <define name="_ALLSERVICE_TIMETOPROGRESS" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@timetoprogress}" />
    <define name="_ALLSERVICE_AVAIL_BAL" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@availbalance}" />
    <define name="_ALLSERVICE_NAME" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@name}" />
    <!-- ==========================  ALL SERVICE   ========================= -->
    <!-- ==========================  SETTINGS   ========================= -->
    <define name="_WAIT_IFASYNC_INPROCESS" value="#{if('${sDbresult}'='redirect','#{if(not(matches('${sInProgress}','_IF_TRUE')),'true','')}','')}" />
    <define name="_GET_TODAY" value="#{concat(substring('@{now}',7,4),substring('@{now}',4,2),substring('@{now}',1,2))}" />
    <define name="_GET_SECONDS" value="#{(number(substring('@{now}',12,2)) * 60 * 60) + (number(substring('@{now}',15,2)) * 60) + number(substring('@{now}',18,2))}" />
    <define name="_GET_DBRESULT" value="#{document('_DICTIONARY_PATH')/Dictionary/Item[code/@value='${sDbresult}']/@info__GET_LANG}" />
    <define name="_GET_LENGTH_DBRESULT" value="#{string-length(document('_DICTIONARY_PATH')/Dictionary/Item[code/@value='${sDbresult}']/@info__GET_LANG)}" />
    <define name="_GET_AFTER_VERIFY_DBRESULT" value="#{if('#{document('_DICTIONARY_PATH')/Dictionary/Item[code/@value='${customerblocks}']/@info__GET_LANG}'!='','${customerblocks}','${dbresult}')}" />
    <define name="_ENCODING" value="#{document('_DICTIONARY_PATH')/Dictionary/Language/Item[@param='_GET_LANG']/@encoding}" />
    <define name="_INLANGUAGE" value="#{if('#{document('_DICTIONARY_PATH')/Dictionary/Language/Item[@language_id='${language_id}']/@param}'='','#{document('_DICTIONARY_PATH')/Dictionary/Language/Item[@language_id='']/@param}','#{document('_DICTIONARY_PATH')/Dictionary/Language/Item[@language_id='${language_id}']/@param}')}" />
    <define name="_GET_LANG" value="#{if('${sLang}'='','#{document('_DICTIONARY_PATH')/Dictionary/Language/Item[@language_id='']/@param}','${sLang}')}" />
    <define name="_DEFAULT_ERR" value="#{if('${dbresult}'='-1','err001','${dbresult}')}" />
    <define name="_REDIRECT_TO_SMS" value="^[Ss][Mm][Ss]$" />
    <define name="_REDIRECT_TO_CURRENT" value="^[Nn][Oo][Tt][Rr][Ee][Dd][Ii][Rr][Ee][Cc][Tt]$" />
    <define name="_IF_TRUE" value="^([Tt][Rr][Uu][Ee]|1)$" />
    <define name="_BYCRM" value="[Bb][Yy][Cc][Rr][Mm]" />
    <define name="_CURRENT_MODULE" value="#{if('${sModule}'!='','${sModule}','_EXIST_MODULE')}" />
    <define name="_EXIST_MODULE" value="soapcon" />
    <define name="_SERVICE_PATH" value="..\..\Config\Service\SERVICE.xml" />
    <define name="_ALLSERVICE_PATH" value="..\..\Config\Service\All_SERVICE.xml" />
    <define name="_TARIF_PATH" value="..\..\Config\Tariff\TARIFF_PLANS.xml" />
    <define name="_COUNTERS_PATH" value="..\..\Config\Service\COUNTERS.xml" />
    <define name="_DICTIONARY_PATH" value="..\..\Config\DICTIONARY.xml" />
    <define name="_CONFIRM_VALUE" value="confirm" />
    <define name="_CURRENT_INITIATOR" value="smscon" />
    <!-- ==========================  SETTINGS   ========================= -->
    <!-- ==========================  RBT   ========================= -->
    <define name="_CONTENT_PARCE_SERVICE" value="#{replace('${result}','(.*)_(\d{0,9})','$1')}" />
    <define name="_CONTENT_PARCE_QUANTITY" value="#{replace('${result}','(.*)_(\d{0,9})','$2')}" />
    <!-- ==========================  RBT   ========================= -->
  </macros>
  <template procedureName="ServiceProvisioning" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(SMSSrvProv_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sAction,${action})}
        @{store(sService,${service})}
        @{store(sModule,_CURRENT_MODULE)}
        @{store(sLang,_GET_MOD_LANGUAGE)}
      </Message>
    </receiveTemplate>
    <!--deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}"/-->
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_SERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="false@{store(sServiceCode,#{if(matches('${sInProgress}','_IF_TRUE'),'${sServiceCode}','_SERVICE_CODE')})}" />
    <deliveryTemplate conditionEx="false@{store(sGroupName,#{if(matches('${sInProgress}','_IF_TRUE'),'${sGroupName}','_SERVICE_GROUPNAME')})}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <!--deliveryTemplate call="ServiceStringFormat">
            <set conditionEx="0@{store(sDbresult,329992)}" />
            <set item="iparam:content" value=""/>
        </deliveryTemplate-->
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sService}'='AVTOMBOFF' and '${sAction}'='3'}" call="AutoInetCheck" />
    <deliveryTemplate conditionEx="#{'${sService}'='CB123' and '${sAction}'='3'}" call="RoamingCheck" />
    <deliveryTemplate conditionEx="#{'${sServiceCode}'='' or '${sService}'='' or '${sCustomer}'=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sAction}'=''}" call="ServiceInterrogation">
      <set item="iparam:customer" value="${sCustomer}" />
      <set item="iparam:service" value="${sService}" />
      <set item="iparam:lang" value="_GET_LANG" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sAction}'='_CONFIRM_VALUE'}" call="ServiceProvisioning_Cnfrm_Step2" />
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE') and '${sServiceCode}'='_SERVICE_CODE' and '${sActParce}'='_SERVICE_COMM_ACTPARCE' and '${sActParce}'!=''}" call="ServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,alrprogress_${sActParce})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,inprogress_${sActParce})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_SERVICE_CUSTLST_CNT&gt;0 and not(matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_SERVICE_CUSTLST_CNT=0 and matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_SERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ServiceStringFormat">
      <set item="iparam:content" value="_SERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_GET_TODAY' &gt; '_SERVICE_DATETO'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,service_notavailable)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_GET_TODAY' &lt; '_SERVICE_DATEFROM'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,service_unavailable)}" />
      <set conditionEx="0@{store(sParams,_SERVICE_NAME;#{concat(substring('_SERVICE_DATEFROM',7,2),'.',substring('_SERVICE_DATEFROM',5,2),'.',substring('_SERVICE_DATEFROM',1,4))})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sService}'='FRPOLDOV' and '${sAction}'='2'}" call="PartialBlockLimitCheck" />
    <deliveryTemplate call="ServiceProvisioning_Inter_Step3" />
    <input>
      <param name="customer" />
      <param name="service" />
      <param name="action" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
      <param name="customer" />
      <param name="service" />
      <param name="lang" />
    </output>
  </template>
  <template procedureName="ServiceProvisioningContent" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(USSDSrvProv_${customer})}">
        <Item procedureName="other_spikes.get_content_language">
          <Attribute name="p_msisdn" type="STRING" value="${customer}" />
          <Attribute name="p_action" type="STRING" value="${action}" />
          <Attribute name="p_content_action" type="STRING" value="1" />
          <Attribute name="p_lang" type="STRING" value="${params}" />
          <Attribute name="p_content_name" type="STRING" value="${provider_id}" />
          <Attribute name="dbresult" type="out:STRING" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sAction,${action})}
        @{store(sService,${service})}
        @{store(sModule,_CURRENT_MODULE)}
        @{store(sLang,_GET_MOD_LANGUAGE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_SERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="false@{store(sServiceCode,#{if(matches('${sInProgress}','_IF_TRUE'),'${sServiceCode}','_SERVICE_CODE')})}" />
    <deliveryTemplate conditionEx="false@{store(sGroupName,#{if(matches('${sInProgress}','_IF_TRUE'),'${sGroupName}','_SERVICE_GROUPNAME')})}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <!--deliveryTemplate call="ServiceStringFormat">
            <set conditionEx="0@{store(sDbresult,329992)}" />
            <set item="iparam:content" value=""/>
        </deliveryTemplate-->
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sService}'='AVTOMBOFF' and '${sAction}'='3'}" call="AutoInetCheck" />
    <deliveryTemplate conditionEx="#{'${sServiceCode}'='' or '${sService}'='' or '${sCustomer}'=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sAction}'=''}" call="ServiceInterrogation">
      <set item="iparam:customer" value="${sCustomer}" />
      <set item="iparam:service" value="${sService}" />
      <set item="iparam:lang" value="_GET_LANG" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sAction}'='_CONFIRM_VALUE'}" call="ServiceProvisioning_Cnfrm_Step2" />
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE') and '${sServiceCode}'='_SERVICE_CODE' and '${sActParce}'='_SERVICE_COMM_ACTPARCE' and '${sActParce}'!=''}" call="ServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,alrprogress_${sActParce})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,inprogress_${sActParce})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_SERVICE_CUSTLST_CNT&gt;0 and not(matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_SERVICE_CUSTLST_CNT=0 and matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_SERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ServiceStringFormat">
      <set item="iparam:content" value="_SERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_GET_TODAY' &gt; '_SERVICE_DATETO'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,service_notavailable)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_GET_TODAY' &lt; '_SERVICE_DATEFROM'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,service_unavailable)}" />
      <set conditionEx="0@{store(sParams,_SERVICE_NAME;#{concat(substring('_SERVICE_DATEFROM',7,2),'.',substring('_SERVICE_DATEFROM',5,2),'.',substring('_SERVICE_DATEFROM',1,4))})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sService}'='FRPOLDOV' and '${sAction}'='2'}" call="PartialBlockLimitCheck" />
    <!--deliveryTemplate conditionEx="#{'${sService}'='FRMBPACKMSK' and '${sAction}'='2'}" call="BonusPack1000Check"/-->
    <!--deliveryTemplate conditionEx="#{'${sService}'='FRMBPACKMSK2' and '${sAction}'='2'}" call="BonusPack1000Check"/-->
    <deliveryTemplate call="ServiceProvisioning_Inter_Step3" />
    <input>
      <param name="customer" />
      <param name="service" />
      <param name="action" />
      <param name="lang" />
      <param name="provider_id" />
      <param name="params" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
      <param name="customer" />
      <param name="service" />
      <param name="lang" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Cnfrm_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="_SERVICE_CODE" action="interrogation" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '_SERVICE_CNFR_NAME'!=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,_CONFIRM_VALUE__SERVICE_CRMSTATUS)}" />
      <set conditionEx="0@{store(sParams,_SERVICE_CNFR_NAME)}" />
      <set item="iparam:content" value="_GET_CONFIRM_SERVICE_RESULT" />
    </deliveryTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Inter_Step3" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="${sServiceCode}" action="interrogation" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sActParce,_SERVICE_COMM_ACTPARCE)}" />
    <!--deliveryTemplate conditionEx="#{(${sServiceCode}'='FRMOBITEL05' or ${sServiceCode}'='FRMOBITEL08') and '_SERVICE_COMM_STATUS'='${subscription}'}" call="ServiceProvisioning_Check_Quantity"/-->
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0' or '${sActParce}'='' or '${dbresult}'!='0' or '_SERVICE_COMM_STATUS'='' or '_SERVICE_COMM_ACTION'=''}" call="ServiceStringFormat">
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,329990)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_SERVICE_COMM_STATUS'='${subscription}'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,_SERVICE_COMM_CODE)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_SERVICE_REDIRECT','_REDIRECT_TO_CURRENT'))  and '_SERVICE_REDIRECT'!=''}" call="ServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sService}'='FRCRBT' and '${sAction}'='3'}" call="RBT_Update_Quantity_FRGOODOK" />
    <deliveryTemplate conditionEx="#{'_SERVICE_AVAIL_BAL'!=''}" call="ServiceProvisioningChckBndBal" />
    <deliveryTemplate conditionEx="#{_SERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndSrv" />
    <deliveryTemplate call="ServiceProvisioning_Vrf_Step4" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="RBT_Update_Quantity_FRGOODOK" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.frgoodok_update_quantity">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceProvisioning_Vrf_Step4" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioningChckBndBal" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="6" />
          <Attribute name="requestcountertype" value="0" />
        </Item>
        @{store(sIsBindBalAval,true)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100) &lt; _SERVICE_AVAIL_BAL}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,notavailbalance)}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_SERVICE_AVAIL_BAL and _SERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndSrv" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_SERVICE_AVAIL_BAL}" call="ServiceProvisioning_Vrf_Step4" />
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioningChckBndSrv" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        @{store(sCnt,#{if('${sCnt}'='',1,number('${sCnt}')+1)})}
        <Item customer="${sCustomer}">
          <Service id="_SERVICE_SRVBIND_SRVCODE" action="interrogation" />
        </Item>
        @{store(sIsBindSrvAval,true)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${subscription}'='_SERVICE_SRVBIND_SUBSR' and '_SERVICE_SRVBIND_INFO'!=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="_SERVICE_SRVBIND_INFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_SERVICE_SRVBIND_CNT and ${subscription}=_SERVICE_SRVBIND_SUBSR}" call="ServiceProvisioning_Vrf_Step4">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_SERVICE_SRVBIND_STORE','${sRequi};_SERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_SERVICE_SRVBIND_CNT and ${subscription}!=_SERVICE_SRVBIND_SUBSR}" call="ServiceProvisioning_Vrf_Step4" />
    <deliveryTemplate conditionEx="#{'${subscription}'!='_SERVICE_SRVBIND_SUBSR'}" call="ServiceProvisioningChckBndSrv" />
    <deliveryTemplate conditionEx="#{'${subscription}'='_SERVICE_SRVBIND_SUBSR'}" call="ServiceProvisioningChckBndSrv">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_SERVICE_SRVBIND_STORE','${sRequi};_SERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Vrf_Step4" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <!--deliveryTemplate conditionEx="#{'${sQuantity}'>'0' and '${sAction}'='2'}" call="ServiceProvisioning_Update_Quantity"/-->
    <!--deliveryTemplate conditionEx="#{'${sQuantity}'>'0' and '${sAction}'='3'}" call="ServiceProvisioning_Update_Quantity"/-->
    <deliveryTemplate conditionEx="#{('${customerblocks}'!='' or '${dbresult}'='320347') and matches('_SERVICE_CHECKBLOCK','_IF_TRUE')}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,_GET_AFTER_VERIFY_DBRESULT)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0' and '${dbresult}'!='320347'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='320060'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_SERVICE_TP_CNT&gt;0 and not(matches('_SERVICE_TP_ISAVAIL','_IF_TRUE'))) or (_SERVICE_TP_CNT=0 and matches('_SERVICE_TP_ISAVAIL','_IF_TRUE'))) and '_SERVICE_TP_NOTAVALINFO'!=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sParams,_SERVICE_NAME;_TARIFF_CURRENT_NAME)}" />
      <set item="iparam:content" value="_SERVICE_TP_NOTAVALINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sGroupName}'='BMS'}" call="ServiceProvisioning_BMS_Step6" />
    <deliveryTemplate conditionEx="#{'${sGroupName}'='BLOCKS'}" call="ServiceProvisioning_Block_Step6" />
    <deliveryTemplate call="ServiceProvisioning_Order_Step5" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Check_Quantity" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.service_check_quantity">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_service" type="STRING" value="${sService}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sQuantity,_CONTENT_PARCE_QUANTITY)}" />
    <deliveryTemplate conditionEx="#{'_SERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndBal" />
    <deliveryTemplate conditionEx="#{_SERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ServiceProvisioningChckBndSrv" />
    <deliveryTemplate call="ServiceProvisioning_Vrf_Step4" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Update_Quantity" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.service_update_quantity">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_service" type="STRING" value="${sService}" />
          <Attribute name="p_action" type="STRING" value="${sAction}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${result}'='0'}" value="@{store(sDbresult,success_${sActParce})}" />
      <set item="iparam:content" conditionEx="#{'${result}'!='0'}" value="@{store(sDbresult,${result})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Order_Step5" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="${sServiceCode}" action="_SERVICE_COMM_ACTION" class="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success_${sActParce})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_Block_Step6" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="blockphone" action="4">
            <Attribute name="state" value="_SERVICE_COMM_STATUS" />
            <Attribute name="start" value="#{substring('@{now}',1,10)}" />
          </Service>
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success_${sActParce})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceProvisioning_BMS_Step6" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="orderbonusgiftrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="giftcode" value="${sServiceCode}" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success_${sActParce})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceInterrogation" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(SMSSrvInter_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,${service})}
        @{store(sServiceCode,_SERVICE_CODE)}
        @{store(sGroupName,_SERVICE_GROUPNAME)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sServiceCode}'='' or '${sService}'='' or '${sCustomer}'=''}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_SERVICE_CUSTLST_CNT&gt;0 and not(matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_SERVICE_CUSTLST_CNT=0 and matches('_SERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_SERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ServiceStringFormat">
      <set item="iparam:content" value="_SERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sService}'='FRLASTPAY'}" call="CheckLastPayment" />
    <deliveryTemplate call="ServiceInterrogation_Step2" />
    <input>
      <param name="customer" />
      <param name="service" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceInterrogation_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="${sServiceCode}" action="interrogation" />
        </Item>
      </Message>
    </receiveTemplate>
    <!--deliveryTemplate conditionEx="#{'${dbresult}'='0' and '${sService}'='FRLASTPAY' and '${subscription}'='1'}" call="CheckLastPayment">
            <set item="iparam:content" value=""/>
        </deliveryTemplate-->
    <deliveryTemplate call="ServiceStringFormat">
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,service__SERVICE_CRMSTATUS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckLastPayment" handler="_DBCON" sessionStorage="Memory" sessionLifetime="30" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.check_last_payment">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='330720' or '${result}'='330721'}" call="ServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,${result})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sPaymentAmount,#{replace('${result}','(.+)_(.+)','$1')})}" />
    <deliveryTemplate conditionEx="false@{store(sPaymentDate,#{replace('${result}','(.+)_(.+)','$2')})}" />
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,lastpayment)}" />
      <set conditionEx="0@{store(sParams,${sPaymentAmount};${sPaymentDate})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="PartialBlockLimitCheck" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="partial_block_limit_check">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='320208'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${result})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate call="ServiceProvisioning_Inter_Step3" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="AutoInetCheck" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="check_autoinet">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='320001'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${result})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sService,${result})}" />
    <deliveryTemplate conditionEx="false@{store(sServiceCode,#{if(matches('${sInProgress}','_IF_TRUE'),'${sServiceCode}','_SERVICE_CODE')})}" />
    <deliveryTemplate conditionEx="false@{store(sGroupName,#{if(matches('${sInProgress}','_IF_TRUE'),'${sGroupName}','_SERVICE_GROUPNAME')})}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <deliveryTemplate call="ServiceProvisioning_Inter_Step3" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="RoamingCheck" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.check_roaming">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='320001'}" call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${result})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sService,${result})}" />
    <deliveryTemplate conditionEx="false@{store(sServiceCode,#{if(matches('${sInProgress}','_IF_TRUE'),'${sServiceCode}','_SERVICE_CODE')})}" />
    <deliveryTemplate conditionEx="false@{store(sGroupName,#{if(matches('${sInProgress}','_IF_TRUE'),'${sGroupName}','_SERVICE_GROUPNAME')})}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <deliveryTemplate call="ServiceProvisioning_Inter_Step3" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ServiceStringFormat" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="stringformat" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="stringformat">
            <![CDATA[#{if('${Content}'='','_GET_SERVICE_RESULT','${Content}')}@{store(SlowAsync,)}]]>
          </Attribute>
          <Attribute name="params">
            <![CDATA[${sParams}]]>
          </Attribute>
          <Attribute name="split" value=";" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{not(matches('${sInProgress}','_IF_TRUE')) and ('${sDbresult}'='redirect' or matches('${SlowAsync}','_IF_TRUE'))}">
      <set conditionEx="0@{store(sInProgress,true)}" />
      <set conditionEx="0@{store(sStartSecond,_GET_SECONDS)}" />
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sIsFreeSession,#{if(number(_SERVICE_TIMETOPROGRESS)&gt;0,'false','true')})}" />
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE') and matches('_SERVICE_REDIRECT','_REDIRECT_TO_SMS') and not(matches('${sDbresult}','inprogress_|alrprogress_|_CONFIRM_VALUE|inprogress'))}" connector="_SMSCON_1" />
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and matches('${sDbresult}','inprogress_|alrprogress_|_CONFIRM_VALUE|inprogress')}">
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and (not(matches('${sDbresult}','success')) or matches('${sIsFreeSession}','_IF_TRUE'))}">
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and not(matches('${sIsFreeSession}','_IF_TRUE'))}">
      <set conditionEx="0@{store(sStartSecond,_GET_SECONDS)}" />
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${customer}'!='' and matches('@{SessionExists(${session_id})}','_IF_TRUE')}">
      <set conditionEx="0@{store(sDbresult,_DEFAULT_ERR)}" />
      <set item="oparam:result" value="_GET_DBRESULT" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="true@{freeSession}" dropReply="true" />
    <input>
      <param name="content" />
      <param name="storelog" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" />
    </output>
  </template>
  <template procedureName="ChangeTariffPlan" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(SMSChangeTP_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sNewTariffPlan,${newtariffplan})}
        @{store(sModule,_CURRENT_MODULE)}
        @{store(sLang,_GET_MOD_LANGUAGE)}
      </Message>
    </receiveTemplate>
    <!--deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}"/-->
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_TARIFF_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="false@{store(sTariffIvrCode,#{if(matches('${sInProgress}','_IF_TRUE'),'${sTariffIvrCode}','_TARIFF_IVRCODE')})}" />
    <deliveryTemplate conditionEx="false@{store(sGroupName,#{if(matches('${sInProgress}','_IF_TRUE'),'${sGroupName}','_TARIFF_GROUPNAME')})}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_TARIFF_NAME)}" />
    <!--deliveryTemplate call="TariffPlanStringFormat">
            <set conditionEx="0@{store(sDbresult,329992)}" />
            <set item="iparam:content"  value=""/>
        </deliveryTemplate-->
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sTariffIvrCode}'='' or '${sNewTariffPlan}'='' or '${sCustomer}'=''}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sNewTariffPlan}','_CONFIRM_VALUE')}" call="ChangeTariffPlan_Cnfrm_Step2" />
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE') and '${sTariffIvrCode}'='_TARIFF_IVRCODE'}" call="TariffPlanStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,alrprogress)}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_TARIFF_CUSTLST_CNT&gt;0 and not(matches('_TARIFF_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_TARIFF_CUSTLST_CNT=0 and matches('_TARIFF_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_TARIFF_CUSTLST_NOTAVAILINFO'!=''}" call="TariffPlanStringFormat">
      <set item="iparam:content" value="_TARIFF_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_GET_TODAY' &gt; '_TARIFF_DATETO'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,notavailable)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_GET_TODAY' &lt; '_TARIFF_DATEFROM'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,unavailable)}" />
      <set conditionEx="0@{store(sParams,_TARIFF_NAME;#{concat(substring('_TARIFF_DATEFROM',7,2),'.',substring('_TARIFF_DATEFROM',5,2),'.',substring('_TARIFF_DATEFROM',1,4))})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sTariffIvrCode}'='181'}" call="BonusTPCheck" />
    <deliveryTemplate call="ChangeTariffPlan_Step3" />
    <input>
      <param name="customer" />
      <param name="newtariffplan" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangeTariffPlan_Cnfrm_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <condition>
      <test item="0" matches="1" />
    </condition>
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="1" />
          <Attribute name="checkblocks" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${sTariffIvrCode}'='#{//Message/Item/@tariffplan}'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,alreadyex)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '_TARIFF_CURRENT_NAME'!=''}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,_CONFIRM_VALUE)}" />
      <set conditionEx="0@{store(sParams,_TARIFF_NAME;_TARIFF_CURRENT_NAME)}" />
      <set item="iparam:content" value="_GET_CONFIRM_TARIFF_RESULT" />
    </deliveryTemplate>
    <deliveryTemplate call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
  </template>
  <template procedureName="ChangeTariffPlan_Step3" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="1" />
          <Attribute name="checkblocks" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${sTariffIvrCode}'='#{//Message/Item/@tariffplan}'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,alreadyex)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('${customerblocks}'!='' or '${dbresult}'='320347') and matches('_TARIFF_CHECKBLOCK','_IF_TRUE') and '${customerblocks}'!='FRPARTBL'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,_GET_AFTER_VERIFY_DBRESULT)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0' and '${dbresult}'!='320347'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_TARIFF_TP_CNT&gt;0 and not(matches('_TARIFF_TP_ISAVAIL','_IF_TRUE'))) or (_TARIFF_TP_CNT=0 and matches('_TARIFF_TP_ISAVAIL','_IF_TRUE'))) and '_TARIFF_TP_NOTAVAILINFO'!=''}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sParams,_TARIFF_NAME;_TARIFF_CURRENT_NAME)}" />
      <set item="iparam:content" value="_TARIFF_TP_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_TARIFF_AVAIL_BAL'!=''}" call="ChangeTariffPlanCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_TARIFF_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ChangeTariffPlanCheckSrvBinding" />
    <deliveryTemplate conditionEx="#{not(matches('_TARIFF_REDIRECT','_REDIRECT_TO_CURRENT')) and '_TARIFF_REDIRECT'!=''}" call="TariffPlanStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate call="ChangeTariffPlan_Step4" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangeTariffPlanCheckBindingBal" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="6" />
          <Attribute name="requestcountertype" value="0" />
        </Item>
        @{store(sIsBindBalAval,true)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100) &lt;= _TARIFF_AVAIL_BAL}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,notavailbalance)}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_TARIFF_AVAIL_BAL and _TARIFF_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ChangeTariffPlanCheckSrvBinding" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_TARIFF_AVAIL_BAL}" call="ChangeTariffPlan_Step4" />
    <deliveryTemplate call="TariffPlanStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangeTariffPlanCheckSrvBinding" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        @{store(sCnt,#{if('${sCnt}'='',1,number('${sCnt}')+1)})}
        <Item customer="${sCustomer}">
          <Service id="_TARIFF_SRVBIND_SRVCODE" action="interrogation" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${subscription}'='_TARIFF_SRVBIND_SUBSR' and '_TARIFF_SRVBIND_INFO'!=''}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" value="_TARIFF_SRVBIND_INFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_TARIFF_SRVBIND_CNT and ${subscription}=_TARIFF_SRVBIND_SUBSR}" call="ChangeTariffPlan_Step4">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_TARIFF_SRVBIND_STORE','${sRequi};_TARIFF_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_TARIFF_SRVBIND_CNT and ${subscription}!=_TARIFF_SRVBIND_SUBSR}" call="ChangeTariffPlan_Step4" />
    <deliveryTemplate conditionEx="#{'${subscription}'!='_TARIFF_SRVBIND_SUBSR'}" call="ChangeTariffPlanCheckSrvBinding" />
    <deliveryTemplate conditionEx="#{'${subscription}'='_TARIFF_SRVBIND_SUBSR'}" call="ChangeTariffPlanCheckSrvBinding">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_TARIFF_SRVBIND_STORE','${sRequi};_TARIFF_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate call="TariffPlanStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangeTariffPlan_Step4" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="changetariffplan" action="0" class="${sTariffIvrCode}" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="TariffPlanStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="BonusTPCheck" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.bonus_pack_frmbpackmsk">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_service" type="STRING" value="${sTariffIvrCode}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='0'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,320172)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate call="ChangeTariffPlan_Step3" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckTariffPlan" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(SMSChckTP_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sCustomer}'=''}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_TARIFF_CUSTLST_CNT&gt;0 and not(matches('_TARIFF_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_TARIFF_CUSTLST_CNT=0 and matches('_TARIFF_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_TARIFF_CUSTLST_NOTAVAILINFO'!=''}" call="TariffPlanStringFormat">
      <set item="iparam:content" value="_TARIFF_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate call="CheckTariffPlan_Step2" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckTariffPlan_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sTariffIvrCode,${tariffplan})}" />
      <set conditionEx="0@{store(sGroupName,_TARIFF_GROUPNAME)}" />
      <set conditionEx="0@{store(sParams,_TARIFF_NAME)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,checktp)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckTariffPlanCode" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(USSDChckTP_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sCustomer}'=''}" call="TariffPlanStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_TARIFF_CUSTLST_CNT&gt;0 and not(matches('_TARIFF_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_TARIFF_CUSTLST_CNT=0 and matches('_TARIFF_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_TARIFF_CUSTLST_NOTAVAILINFO'!=''}" call="TariffPlanStringFormat">
      <set item="iparam:content" value="_TARIFF_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate call="CheckTariffPlanCode_Step2" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckTariffPlanCode_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate>
      <set item="oparam:result" value="${tariffplan}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" />
    </output>
  </template>
  <template procedureName="TariffPlanStringFormat" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="stringformat" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="stringformat">
            <![CDATA[#{if('${content}'='','_GET_TARIFF_RESULT','${content}')}@{store(SlowAsync,)}]]>
          </Attribute>
          <Attribute name="params">
            <![CDATA[${sParams}]]>
          </Attribute>
          <Attribute name="split" value=";" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{not(matches('${sInProgress}','_IF_TRUE')) and ('${sDbresult}'='redirect' or matches('${SlowAsync}','_IF_TRUE'))}">
      <set conditionEx="0@{store(sInProgress,true)}" />
      <set conditionEx="0@{store(sStartSecond,_GET_SECONDS)}" />
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sIsFreeSession,#{if(number(_TARIFF_TIMETOPROGRESS)&gt;0,'false','true')})}" />
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE') and matches('_TARIFF_REDIRECT','_REDIRECT_TO_SMS') and not(matches('${sDbresult}','inprogress|alrprogress|_CONFIRM_VALUE'))}" connector="_SMSCON_1" />
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and matches('${sDbresult}','inprogress|alrprogress|_CONFIRM_VALUE')}">
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and (not(matches('${sDbresult}','success')) or matches('${sIsFreeSession}','_IF_TRUE'))}">
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and not(matches('${sIsFreeSession}','_IF_TRUE'))}">
      <set conditionEx="0@{store(sStartSecond,_GET_SECONDS)}" />
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${customer}'!='' and matches('@{SessionExists(${session_id})}','_IF_TRUE')}">
      <set conditionEx="0@{store(sDbresult,_DEFAULT_ERR)}" />
      <set item="oparam:result" value="_GET_DBRESULT" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="true@{freeSession}" dropReply="true" />
    <input>
      <param name="content" />
      <param name="storelog" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" />
    </output>
  </template>
  <template procedureName="PtPMoneyTransfer" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(PTP_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sAmount,${amount})}
        @{store(sReceiver,${receiver})}
        @{store(sService,_PTPMONEYTR)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <!--deliveryTemplate call="ALLServiceStringFormat">
            <set conditionEx="0@{store(sDbresult,329992)}" />
            <set item="iparam:content" value=""/>
        </deliveryTemplate-->
    <deliveryTemplate conditionEx="#{'${sReceiver}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,getacceptor)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sAmount}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,getamount)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="CheckCustomerTypePtP" />
    <input>
      <param name="customer" />
      <param name="receiver" />
      <param name="amount" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCustomerTypePtP" handler="_DBCON" sessionStorage="Memory" sessionLifetime="30" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.customer_type">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='330723' or '${result}'='330724'}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,${result})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='2'}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,330722)}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='1'}" call="PtPMoneyTransfer_Step3" />
    <input>
      <param name="content" />
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="PtPMoneyTransfer_Step3" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="movepaymentrequest" action="5">
            <Attribute name="receiver" value="${sReceiver}" />
            <Attribute name="amount" value="${sAmount}" />
          </Service>
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0'}" call="PtPMoneyTransfer_Step4">
      <set conditionEx="0@{store(sOutCode,${code})}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,320968)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="PtPMoneyTransfer_Step4" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="movepaymentacceptance" action="5">
            <Attribute name="code" value="#{normalize-space('${sOutCode}')}" />
          </Service>
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sParams,${sAmount};${sReceiver})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangePasswordISSA" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(ChngISSAPass_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sNewpassword,${newpassword})}
        @{store(sService,_ISSAPASS)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sNewpassword}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,getpassword)}" />
      <set item="Content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sNewpassword}'='' or '_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="ChangePasswordISSA_Step2" />
    <input>
      <param name="customer" />
      <param name="newpassword" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangePasswordISSA_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{//Item/@dbresult=0}" call="ChangePasswordISSA_Step3">
      <set conditionEx="0@{store(sOldPass,${password})}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangePasswordISSA_Step3" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="setprofile" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="oldpassword" value="${sOldPass}" />
          <Attribute name="newpassword" value="${sNewpassword}" />
          <Attribute name="confirmpassword" value="${sNewpassword}" />
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="FavouriteNumberCheck" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(ChkFav_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,_CHKFAVNUM)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="FavouriteNumberCheck_Step2" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="FavouriteNumberCheck_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="setprofile" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" action="8">
          <Attribute name="favouritenumber" value="" />
          <Attribute name="index" value="1" />
          <Attribute name="favouritenumbertypeid" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${favouritenumber}'='' and '${dbresult}'='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,301010)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sParams,${favouritenumber})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="FavouriteNumberUpdate" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(UpdFav_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,_UPDFAVNUM)}
        @{store(sFavNum,${favnum})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sFavNum}'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="FavouriteNumberUpdate_Step2" />
    <input>
      <param name="customer" />
      <param name="favnum" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="FavouriteNumberUpdate_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="setprofile" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" action="10">
          <Attribute name="favouritenumber" value="${sFavNum}" />
          <Attribute name="index" value="0" />
          <Attribute name="favouritenumbertypeid" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sParams,${favouritenumber})}" />
      <set item="iparam:content" condition="(//Item/@dbresult=320194 or //Item/@dbresult=320142) and //Item/Attribute[@name='count']/@value&gt;0" value="@{store(sDbresult,310204)}" />
      <set item="iparam:content" condition="(//Item/@dbresult=320194 or //Item/@dbresult=320142) and //Item/Attribute[@name='count']/@value=0" value="@{store(sDbresult,320204)}" />
      <set item="iparam:content" condition="//Item/@dbresult=0" value="@{store(sDbresult,success)}" />
      <set item="iparam:content" condition="//Item/@dbresult!=0" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="FavouriteNumberDelete" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(DelFav_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,_DELFAVNUM)}
        @{store(sFavNum,${favnum})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sFavNum}'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="FavouriteNumberDelete_Step2" />
    <input>
      <param name="customer" />
      <param name="favnum" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="FavouriteNumberDelete_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="setprofile" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" action="11">
          <Attribute name="favouritenumber" value="${sFavNum}" />
          <Attribute name="index" value="0" />
          <Attribute name="favouritenumbertypeid" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sParams,${favouritenumber})}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangeLanguageINPlatform" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(ChngINLang_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sLang,_GET_MOD_LANGUAGE)}
        @{store(sService,_LANGUAGE)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="ChangeLanguageINPlatform_Step2" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ChangeLanguageINPlatform_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="setprofile" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}" reply="">
        <Item customer="${sCustomer}">
          <Attribute name="communicationlanguage" value="#{document('_DICTIONARY_PATH')/Dictionary/Language/Item[@param='_GET_LANG']/@language_id}" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="LatestPayments" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(LastPayment_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,_GETLASTPAY)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="LatestPayments_Step2" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="LatestPayments_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="payments">
          <Attribute name="index" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set conditionEx="0@{store(sParams,#{replace('${intpartfracpart} * 42.1035',',','.')};#{replace('#{${intpartfracpart} div 100}',',','.')};${day})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="LastOutstandingPayment" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(LastOutPayment_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,_GETOUTLASTPAY)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="LastOutstandingPayment_Step2" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="LastOutstandingPayment_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="payments">
          <Attribute name="index" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set conditionEx="0@{store(sParams,#{replace('${intpartfracpart} * 42.1035',',','.')};#{replace('#{${intpartfracpart} div 100}',',','.')};${day})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="GuaranteedPayment" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(GrntPay_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,_GRNTPAY)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="CheckCustomerTypeGP" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCustomerTypeGP" handler="_DBCON" sessionStorage="Memory" sessionLifetime="30" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.customer_type">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='330723' or '${result}'='330724'}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,${result})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='2'}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,330722)}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='1'}" call="CheckActiveServiceGP" />
    <input>
      <param name="content" />
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckActiveServiceGP" handler="_DBCON" sessionStorage="Memory" sessionLifetime="30" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.check_active_service">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_service" type="STRING" value="FRZOBPL" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='FRZOBPL'}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="@{store(sDbresult,320704)}" />
    </deliveryTemplate>
    <deliveryTemplate call="GuaranteedPayment_Step2" />
    <input>
      <param name="content" />
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="GuaranteedPayment_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service action="6" id="guaranteedpayment" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{${dbresult}=0}" call="GuaranteedPayment_Step3" />
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="GuaranteedPayment_Step3" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="guaranteedpayment" action="7">
            <Attribute name="amount" value="300" />
            <Attribute name="currency" value="840" />
          </Service>
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,success)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckGuaranteedPayment" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(GrntPay_${customer})}">
        <Item customer="${customer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,_GRNTPAY)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="CheckGuaranteedPayment_Step2" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckGuaranteedPayment_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service action="6" id="guaranteedpayment" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,320206)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="DB_BalanceRetriev" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(${customer}_GetBalance__GET_MOD_LANGUAGE)}">
        <Item customer="${customer}" />
        @{store(sCustomer,${customer})}
        @{store(sLang,_GET_MOD_LANGUAGE)}
        @{store(sService,_GETBALANCE)}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate call="DB_BalanceRetriev_Step2" />
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="DB_BalanceRetriev_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="0" />
          <Attribute name="requestcountertype" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{${dbresult}!=0}"  call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="_GET_DBRESULT" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sBalance,${balanceintpartdotpart})}" />
    <deliveryTemplate conditionEx="false@{store(sCalccurr,${balanceintpartdotpart} * 42.1035)}" />
    <deliveryTemplate conditionEx="false@{store(sCurrency,${currency})}" />
    <deliveryTemplate conditionEx="false@{store(sCounters,#{//Item/Attribute[@name='full']/@value})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '${sTariffIvrCode}'=''}" call="DB_BalanceRetriev_Step4" />
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '${sTariffIvrCode}'!=''}" call="DB_BalanceRetriev_Step5" />
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="DB_BalanceRetriev_Step4" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="1" />
          <Attribute name="checkblocks" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="DB_BalanceRetriev_Step5">
      <set conditionEx="0@{store(sTariffIvrCode,${tariffplan})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="DB_BalanceRetriev_Step5" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="openbills">
          <Attribute name="includeunbilleddata" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
    <deliveryTemplate conditionEx="false@{store(sDbresult,success)}" />
    <deliveryTemplate conditionEx="#{'${sBalance}'='' and '${sCalccurr}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,320967)}" />
      <set item="iparam:content" value="_GET_DBRESULT" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${summintdotpart}'='' and '${sTariffIvrCode}'='' and '${sCounters}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sParams,#{replace('#{${sBalance} div 100}',',','.')};#{replace('#{${sCalccurr} div 100}',',','.')})}" />
      <set item="iparam:content" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_#{if(${sBalance}&gt;=0,'bal','debt')}__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${summintdotpart}'='' and '${sTariffIvrCode}'='' and '${sCounters}'!=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sParams,#{replace('#{${sBalance} div 100}',',','.')};#{replace('#{${sCalccurr} div 100}',',','.')};${sCounters})}" />
      <set item="iparam:content" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_#{if(${sBalance}&gt;=0,'bal','debt')}_cntr__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${summintdotpart}'='' and '${sTariffIvrCode}'!='' and '${sCounters}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sParams,#{replace('#{${sBalance} div 100}',',','.')};#{replace('#{${sCalccurr} div 100}',',','.')};_TARIFF_BALANCE_NAME)}" />
      <set item="iparam:content" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_#{if(${sBalance}&gt;=0,'bal','debt')}_plan__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${summintdotpart}'='' and '${sTariffIvrCode}'!='' and '${sCounters}'!=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sParams,#{replace('#{${sBalance} div 100}',',','.')};#{replace('#{${sCalccurr} div 100}',',','.')};_TARIFF_BALANCE_NAME;${sCounters})}" />
      <set item="iparam:content" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_#{if(${sBalance}&gt;=0,'bal','debt')}_plan_cntr__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${summintdotpart}'!='' and '${sTariffIvrCode}'='' and '${sCounters}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sParams,#{replace('#{${sBalance} div 100}',',','.')};#{replace('#{${sCalccurr} div 100}',',','.')};${lastminibillingdate};#{replace('#{${summintdotpart} div 100}',',','.')}#{if('${currency}'='840',' y.e',' sum')})}" />
      <set item="iparam:content" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_#{if(${sBalance}&gt;=0,'bal','debt')}_bill__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${summintdotpart}'!='' and '${sTariffIvrCode}'='' and '${sCounters}'!=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sParams,#{replace('#{${sBalance} div 100}',',','.')};#{replace('#{${sCalccurr} div 100}',',','.')};${lastminibillingdate};#{replace('#{${summintdotpart} div 100}',',','.')}#{if('${currency}'='840',' y.e',' sum')};${sCounters})}" />
      <set item="iparam:content" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_#{if(${sBalance}&gt;=0,'bal','debt')}_bill_cntr__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${summintdotpart}'!='' and '${sTariffIvrCode}'!='' and '${sCounters}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sParams,#{replace('#{${sBalance} div 100}',',','.')};#{replace('#{${sCalccurr} div 100}',',','.')};${lastminibillingdate};#{replace('#{${summintdotpart} div 100}',',','.')}#{if('${currency}'='840',' y.e',' sum')};_TARIFF_BALANCE_NAME)}" />
      <set item="iparam:content" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_#{if(${sBalance}&gt;=0,'bal','debt')}_full__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${summintdotpart}'!='' and '${sTariffIvrCode}'!='' and '${sCounters}'!=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sParams,#{replace('#{${sBalance} div 100}',',','.')};#{replace('#{${sCalccurr} div 100}',',','.')};${lastminibillingdate};#{replace('#{${summintdotpart} div 100}',',','.')}#{if('${currency}'='840',' y.e',' sum')};_TARIFF_BALANCE_NAME;${sCounters})}" />
      <set item="iparam:content" value="#{document('_ALLSERVICE_PATH')/ServiceList/Service[_CURRENT_MODULE/@value='${sService}']/@info_#{if(${sBalance}&gt;=0,'bal','debt')}_full_cntr__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,320967)}" />
      <set item="iparam:content" value="_GET_DBRESULT" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" value="" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCounters" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(${customer}_GetCounters__GET_MOD_LANGUAGE)}">
        <Item customer="${customer}" />
        @{store(sCustomer,${customer})}
        @{store(sLang,_GET_MOD_LANGUAGE)}
        @{store(sService,_GETCOUNTERS)}
        @{store(sCountertype,${countertype})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_ALLSERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='' or '${sCountertype}'='' or '${sCustomer}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,inprogress)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_CUSTLST_CNT&gt;0 and not(matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_CUSTLST_CNT=0 and matches('_ALLSERVICE_CUSTLST_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_CUSTLST_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set item="iparam:content" value="_ALLSERVICE_CUSTLST_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{not(matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_CURRENT')) and '_ALLSERVICE_REDIRECT'!=''}" call="ALLServiceStringFormat" terminating="false">
      <set conditionEx="0@{store(sDbresult,redirect)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{('_ALLSERVICE_TP_NOTAVAILINFO'!='' or matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')) and not(matches('${sIsBindVerfAval}','_IF_TRUE'))}" call="ALLServiceCheckVerify" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='inetsms'}" call="CheckCounters102_Step2" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='autoinet'}" call="CheckCountersAutoinet_Step2" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='autosms'}" call="CheckCountersAutoinet_Step2" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='discount'}" call="DiscountCheckDateDelayed" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='superzero'}" call="CheckCountersSuperzero_Step2" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='nightdrive'}" call="CheckCounters_GetTP" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='bzs' or '${sCountertype}'='vernis' or '${sCountertype}'='huawei2017'
or '${sCountertype}'='comebacktosms' or '${sCountertype}'='welcometosms' or '${sCountertype}'='welcome' or '${sCountertype}'='huawei' or '${sCountertype}'='artel'
or '${sCountertype}'='samsung'  or '${sCountertype}'='bonushuawei' or '${sCountertype}'='xiaomi'  or '${sCountertype}'='enrollee' or '${sCountertype}'='compliment' or '${sCountertype}'='supervoice'
or '${sCountertype}'='welcomebonus'}" call="CheckCountersAutoinetDelayed_Step2" />
    <deliveryTemplate call="CheckCounters_Step2" />
    <input>
      <param name="customer" />
      <param name="countertype" />
      <param name="lang" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCounters_GetTP" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${sCountertype}'='nightdrive'}" call="CheckNightDrive">
      <set conditionEx="0@{store(sTariffIvrCode,${tariffplan})}" />
    </deliveryTemplate>
    <deliveryTemplate call="CheckCounters_Step2">
      <set conditionEx="0@{store(sTariffIvrCode,${tariffplan})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCountersAutoinetDelayed_Step2" sessionStorage="Memory" sessionLifetime="30" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="0" />
          <Attribute name="requestcountertype" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='accumulator']/@value}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set item="iparam:content" value="#{document('_COUNTERS_PATH')/Counters/Group[_CURRENT_MODULE/@value='${sCountertype}']/@getcounters_nocounters__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value}'!=''}" call="AutoInetCheckDateDelayed">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sCounterValue,#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value})}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,320990)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCountersSuperzero_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="0" />
          <Attribute name="requestcountertype" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='accumulator']/@value}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set item="iparam:content" value="#{document('_COUNTERS_PATH')/Counters/Group[_CURRENT_MODULE/@value='${sCountertype}']/@getcounters_nocounters__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value}'!=''}" call="SuperzeroCheckDate">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sCounterValue,#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value})}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,320990)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCountersAutoinet_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="0" />
          <Attribute name="requestcountertype" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='accumulator']/@value}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set item="iparam:content" value="#{document('_COUNTERS_PATH')/Counters/Group[_CURRENT_MODULE/@value='${sCountertype}']/@getcounters_nocounters__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value}'!=''}" call="AutoInetCheckDate">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sCounterValue,#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value})}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,320990)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCounters102_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="0" />
          <Attribute name="requestcountertype" value="2" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='accumulator']/@value}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set item="iparam:content" value="#{document('_COUNTERS_PATH')/Counters/Group[_CURRENT_MODULE/@value='${sCountertype}']/@getcounters_nocounters__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value}'!=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set item="iparam:content" value="#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,320990)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="AutoInetCheckDate" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.check_autoinet_date">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_countertype" type="STRING" value="${sCountertype}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='320001'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,NOTONNET)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sAutoinetname,#{replace('${result}','(.*)_(\d{0,9})','$1')})}" />
    <deliveryTemplate conditionEx="false@{store(sAutoinetdate,#{replace('${result}','(.*)_(\d{0,9})','$2')})}" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='autoinet'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,autoinet)}" />
      <set conditionEx="0@{store(sParams,${sAutoinetname};${sCounterValue};${sAutoinetdate})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sCountertype}'='autosms'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,autosms)}" />
      <set conditionEx="0@{store(sParams,${sAutoinetname};${sCounterValue};${sAutoinetdate})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="CheckCounters_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="0" />
          <Attribute name="requestcountertype" value="3" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='accumulator']/@value}'=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set item="iparam:content" value="#{document('_COUNTERS_PATH')/Counters/Group[_CURRENT_MODULE/@value='${sCountertype}']/@getcounters_nocounters__GET_LANG}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and '#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value}'!=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set item="iparam:content" value="#{//Item/Attribute[@name='_COUNTERS_TYPE']/@value}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'='0'}" value="@{store(sDbresult,320990)}" />
      <set item="iparam:content" conditionEx="#{'${dbresult}'!='0'}" value="@{store(sDbresult,${dbresult})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="AutoInetCheckDateDelayed" handler="_DBCON" sessionStorage="Memory" sessionLifetime="30" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.check_autoinet_date_delayed">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_countertype" type="STRING" value="${sCountertype}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='320001'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,NOTACTIVEPACK)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sAutoinetname,#{replace('${result}','(.*)_(\d{0,9})_(.*)','$1')})}" />
    <deliveryTemplate conditionEx="false@{store(sAutoinetdate,#{replace('${result}','(.*)_(\d{0,9})_(.*)','$2')})}" />
    <deliveryTemplate conditionEx="false@{store(sAutoinetdelayed,#{replace('${result}','(.*)_(\d{0,9})_(.*)','$3')})}" />
    <deliveryTemplate conditionEx="#{'${sCountertype}'='vernis'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,vernis)}" />
      <set conditionEx="0@{store(sParams,${sAutoinetname};${sCounterValue};${sAutoinetdate};${sAutoinetdelayed})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sCountertype}'='comebacktosms'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,comebacktosms)}" />
      <set conditionEx="0@{store(sParams,${sAutoinetname};${sCounterValue};${sAutoinetdate};${sAutoinetdelayed})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sCountertype}'='welcometosms'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,welcometosms)}" />
      <set conditionEx="0@{store(sParams,${sAutoinetname};${sCounterValue};${sAutoinetdate};${sAutoinetdelayed})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sCountertype}'='supervoice'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,supervoice)}" />
      <set conditionEx="0@{store(sParams,${sAutoinetname};${sCounterValue};${sAutoinetdate};${sAutoinetdelayed})}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,bzs)}" />
      <set conditionEx="0@{store(sParams,${sAutoinetname};${sCounterValue};${sAutoinetdate};${sAutoinetdelayed})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="DiscountCheckDateDelayed" handler="_DBCON" sessionStorage="Memory" sessionLifetime="30" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.check_discount_date_delayed">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate>
      <set item="oparam:result" value="${result}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="lang" />
      <param name="countertype" />
    </input>
    <output>
      <param name="result" value="" />
      <param name="dbresult" value="0" />
    </output>
  </template>
  <template procedureName="CheckNightDrive" handler="_DBCON" sessionStorage="Memory" sessionLifetime="30" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.check_night_drive">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate>
      <set item="oparam:result" value="${no-escape:result}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${sCustomer}" />
      <set item="oparam:tp" value="${sTariffIvrCode}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <input>
      <param name="content" />
      <param name="storelog" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" />
      <param name="tp" value="" />
    </output>
  </template>
  <template procedureName="SuperzeroCheckDate" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.check_superzero_date">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='320001'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,NOTSUPERZERO)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sSuperzeroname,#{replace('${result}','(.*)_(\d{0,9})','$1')})}" />
    <deliveryTemplate conditionEx="false@{store(sSuperzerodate,#{replace('${result}','(.*)_(\d{0,9})','$2')})}" />
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,superzero)}" />
      <set conditionEx="0@{store(sParams,${sSuperzeroname};${sCounterValue};${sSuperzerodate})}" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ALLServiceCheckVerify" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="1" />
        </Item>
        @{store(sIsBindVerfAval,true)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{('${customerblocks}'!='' or '${dbresult}'='320347') and matches('_ALLSERVICE_CHECKBLOCK','_IF_TRUE')}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,_GET_AFTER_VERIFY_DBRESULT)}" />
      <set conditionEx="0@{store(sIsBindVerfAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0' and '${dbresult}'!='320347'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set conditionEx="0@{store(sIsBindVerfAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{((_ALLSERVICE_TP_CNT&gt;0 and not(matches('_ALLSERVICE_TP_ISAVAIL','_IF_TRUE'))) or (_ALLSERVICE_TP_CNT=0 and matches('_ALLSERVICE_TP_ISAVAIL','_IF_TRUE'))) and '_ALLSERVICE_TP_NOTAVAILINFO'!=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sIsBindVerfAval,false)}" />
      <set conditionEx="0@{store(sParams,_TARIFF_CURRENT_NAME)}" />
      <set item="iparam:content" value="_ALLSERVICE_TP_NOTAVAILINFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sTariffIvrCode,${tariffplan})}" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_AVAIL_BAL'!='' and not(matches('${sIsBindBalAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingBal" />
    <deliveryTemplate conditionEx="#{_ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_PTPMONEYTR'}" call="CheckCustomerTypePtP" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_ISSAPASS'}" call="ChangePasswordISSA_Step2" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_CHKFAVNUM'}" call="FavouriteNumberCheck_Step2" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_UPDFAVNUM'}" call="FavouriteNumberUpdate_Step2" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_DELFAVNUM'}" call="FavouriteNumberDelete_Step2" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_LANGUAGE'}" call="ChangeLanguageINPlatform_Step2" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_GETLASTPAY'}" call="LatestPayments_Step2" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_GETOUTLASTPAY'}" call="LastOutstandingPayment_Step2" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_GRNTPAY'}" call="CheckCustomerTypeGP" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_GETBALANCE'}" call="DB_BalanceRetriev_Step2" />
    <deliveryTemplate conditionEx="#{'_ALLSERVICE_NAME'='_GETCOUNTERS'}" call="CheckCounters_Step2" />
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set conditionEx="0@{store(sIsBindVerfAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ALLServiceCheckBindingBal" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}" subject="balance">
          <Attribute name="unpayment" value="6" />
          <Attribute name="requestcountertype" value="0" />
        </Item>
        @{store(sIsBindBalAval,true)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100) &lt; _ALLSERVICE_AVAIL_BAL}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,notavailbalance)}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sBalance,${balanceintpartdotpart})}" />
    <deliveryTemplate conditionEx="false@{store(sCurrency,${currency})}" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and _ALLSERVICE_SRVBIND_CNT&gt;0 and not(matches('${sIsBindSrvAval}','_IF_TRUE'))}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_PTPMONEYTR'}" call="CheckCustomerTypePtP" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_ISSAPASS'}" call="ChangePasswordISSA_Step2" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_CHKFAVNUM'}" call="FavouriteNumberCheck_Step2" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_UPDFAVNUM'}" call="FavouriteNumberUpdate_Step2" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_DELFAVNUM'}" call="FavouriteNumberDelete_Step2" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_LANGUAGE'}" call="ChangeLanguageINPlatform_Step2" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_GETLASTPAY'}" call="LatestPayments_Step2" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_GETOUTLASTPAY'}" call="LastOutstandingPayment_Step2" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_GRNTPAY'}" call="CheckCustomerTypeGP" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_GETBALANCE'}" call="DB_BalanceRetriev_Step2" />
    <deliveryTemplate conditionEx="#{number(${balanceintpartdotpart} div 100)&gt;_ALLSERVICE_AVAIL_BAL and '_ALLSERVICE_NAME'='_GETCOUNTERS'}" call="CheckCounters_Step2" />
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set conditionEx="0@{store(sIsBindBalAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ALLServiceCheckBindingSrv" sessionStorage="Memory" sessionLifetime="300" persistent="false">
    <receiveTemplate>
      <Message type="serviceinterrogation" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        @{store(sCnt,#{if('${sCnt}'='',1,number('${sCnt}')+1)})}
        <Item customer="${sCustomer}">
          <Service id="_ALLSERVICE_SRVBIND_SRVCODE" action="interrogation" />
        </Item>
        @{store(sIsBindSrvAval,true)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'!='0'}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${subscription}'='_ALLSERVICE_SRVBIND_SUBSR' and '_ALLSERVICE_SRVBIND_INFO'!=''}" call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="_ALLSERVICE_SRVBIND_INFO" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt} &lt; _ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR}" call="ALLServiceCheckBindingSrv" />
    <deliveryTemplate conditionEx="#{${sCnt} &lt; _ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR}" call="ALLServiceCheckBindingSrv">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_PTPMONEYTR'}" call="CheckCustomerTypePtP">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_PTPMONEYTR'}" call="CheckCustomerTypePtP" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_ISSAPASS'}" call="ChangePasswordISSA_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_ISSAPASS'}" call="ChangePasswordISSA_Step2" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_CHKFAVNUM'}" call="FavouriteNumberCheck_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_CHKFAVNUM'}" call="FavouriteNumberCheck_Step2" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_UPDFAVNUM'}" call="FavouriteNumberUpdate_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_UPDFAVNUM'}" call="FavouriteNumberUpdate_Step2" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_DELFAVNUM'}" call="FavouriteNumberDelete_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_DELFAVNUM'}" call="FavouriteNumberDelete_Step2" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_LANGUAGE'}" call="ChangeLanguageINPlatform_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_LANGUAGE'}" call="ChangeLanguageINPlatform_Step2" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GETLASTPAY'}" call="LatestPayments_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GETLASTPAY'}" call="LatestPayments_Step2" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GETOUTLASTPAY'}" call="LastOutstandingPayment_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GETOUTLASTPAY'}" call="LastOutstandingPayment_Step2" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GRNTPAY'}" call="CheckCustomerTypeGP">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GRNTPAY'}" call="CheckCustomerTypeGP" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GETBALANCE'}" call="DB_BalanceRetriev_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GETBALANCE'}" call="DB_BalanceRetriev_Step2" />
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GETCOUNTERS'}" call="CheckCounters_Step2">
      <set conditionEx="0@{store(sRequi,#{if('${sRequi}'='','_ALLSERVICE_SRVBIND_STORE','${sRequi};_ALLSERVICE_SRVBIND_STORE')})}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${sCnt}=_ALLSERVICE_SRVBIND_CNT and ${subscription}!=_ALLSERVICE_SRVBIND_SUBSR and '_ALLSERVICE_NAME'='_GETCOUNTERS'}" call="CheckCounters_Step2" />
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(SlowAsync,_WAIT_IFASYNC_INPROCESS)}" />
      <set conditionEx="0@{store(sDbresult,329990)}" />
      <set conditionEx="0@{store(sIsBindSrvAval,false)}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="storelog" />
    </input>
    <output>
      <param name="content" />
      <param name="storelog" />
    </output>
  </template>
  <template procedureName="ALLServiceStringFormat" sessionStorage="Memory" sessionLifetime="300">
    <receiveTemplate>
      <Message type="stringformat" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Attribute name="stringformat">
            <![CDATA[#{if('${Content}'='','#{if('_GET_ALL_SRV_RESULT'='','_GET_DBRESULT','_GET_ALL_SRV_RESULT')}','${Content}')}@{store(SlowAsync,)}]]>
          </Attribute>
          <Attribute name="params">
            <![CDATA[${sParams}]]>
          </Attribute>
          <Attribute name="split" value=";" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{not(matches('${sInProgress}','_IF_TRUE')) and ('${sDbresult}'='redirect' or matches('${SlowAsync}','_IF_TRUE'))}">
      <set conditionEx="0@{store(sInProgress,true)}" />
      <set conditionEx="0@{store(sStartSecond,_GET_SECONDS)}" />
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="false@{store(sIsFreeSession,#{if(number(_ALLSERVICE_TIMETOPROGRESS)&gt;0,'false','true')})}" />
    <deliveryTemplate conditionEx="#{matches('${sInProgress}','_IF_TRUE') and matches('_ALLSERVICE_REDIRECT','_REDIRECT_TO_SMS') and not(matches('${sDbresult}','inprogress|alrprogress|_CONFIRM_VALUE'))}" connector="_SMSCON_1" />
    <deliveryTemplate conditionEx="#{'${sService}'='_GETNUMBERBYPASSPORT' or '${sService}'='_GETMONTHDETAIL'}" connector="_SMSCON_1" />
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and matches('${sDbresult}','inprogress|alrprogress|_CONFIRM_VALUE')}">
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and (not(matches('${sDbresult}','success')) or matches('${sIsFreeSession}','_IF_TRUE'))}">
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0' and not(matches('${sIsFreeSession}','_IF_TRUE'))}">
      <set conditionEx="0@{store(sStartSecond,_GET_SECONDS)}" />
      <set item="oparam:result" value="${no-escape:Content}" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${customer}'!='' and matches('@{SessionExists(${session_id})}','_IF_TRUE')}">
      <set conditionEx="0@{store(sDbresult,_DEFAULT_ERR)}" />
      <set item="oparam:result" value="_GET_DBRESULT" />
      <set item="oparam:dbresult" value="0" />
      <set item="oparam:customer" value="${customer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="true@{freeSession}" dropReply="true" />
    <input>
      <param name="content" />
      <param name="storelog" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" />
    </output>
  </template>
  <template procedureName="DB_AddRemoveRBTService" persistent="true">
    <receiveTemplate>
      <Message type="serviceorder" initiator="syscon" id="@{newGuid}" session_id="@{newGuid}">
        <Item customer="998${msisdn}">
          <Service id="FRCRBT" action="@{switch(${action}|123,add|2,remove|3)}" class="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{${dbresult}=0}">
      <set item="oparam:RESULT" value="OK" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${dbresult}=320344}">
      <set item="oparam:RESULT" value="BALANCE_NOT_ENOUGHT" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${dbresult}=320204}">
      <set item="oparam:RESULT" value="WRONG_TARIFF" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='-1'}">
      <set item="oparam:RESULT" value="SERVER ERROR" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${dbresult}=320205}">
      <set item="oparam:RESULT" value="SERVE_EXISTS" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{${dbresult}=320206}">
      <set item="oparam:RESULT" value="SERVICE_REMOVED" />
    </deliveryTemplate>
    <deliveryTemplate>
      <set item="oparam:RESULT" value="UNKNOWN ERROR" />
    </deliveryTemplate>
    <input>
      <param name="msisdn" />
      <param name="action" />
    </input>
    <output>
      <param name="RESULT" />
    </output>
  </template>
  <template procedureName="DB_AddRemoveService" persistent="true">
    <receiveTemplate>
      <Message type="bundleprovision" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{newGuid}">
        <Item customer="${customer}">
          <Service id="${servicecode}" action="#{if('${serviceaction}'='2','add',if('${serviceaction}'='3','remove',-1))}" needtariffication="1" enddate="${enddate}" informOnImpossibility="${informOnImpossibility}" sourcetypeid="${sourcetypeid}" userid="${userid}" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate>
      <set item="oparam:RESULT" value="${dbresult}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="servicecode" value="" />
      <param name="serviceaction" value="-1" />
      <param name="needtariffication" value="-1" />
      <param name="enddate" value="00.00.01 01.01.2099" />
      <param name="informOnImpossibility" value="-1" />
      <param name="sourcetypeid" value="1" />
      <param name="userid" value="1" />
    </input>
    <output>
      <param name="RESULT" value="-1" />
    </output>
  </template>
  <template procedureName="Million" handler="_DBCON" sessionStorage="Memory" sessionLifetime="60" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(Million_${customer})}">
        <Item procedureName="bonus_accept">
          <Attribute name="p_msisdn" type="STRING" value="${customer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
        @{store(sCustomer,${customer})}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='1'}">
      <set item="oparam:result" value="Pozdravlyaem! Vi uchastvuete v aktsii *Millioni uje v puti!*" />
      <set item="oparam:customer" value="${sCustomer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='9'}">
      <set item="oparam:result" value="Vi uje avtorizirovanni" />
      <set item="oparam:customer" value="${sCustomer}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" value="" />
    </output>
  </template>
  <template procedureName="PartialBlockLimit" handler="_DBCON" sessionStorage="Memory" sessionLifetime="60" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(SMSPBLimit_${customer})}">
        <Item procedureName="partial_block_limit_check">
          <Attribute name="p_msisdn" type="STRING" value="${customer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sLimit,${limit})}
        @{store(sLang,${lang})}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${sLimit}'!='-5'}" call="PartialBlockLimit_Step2" />
    <deliveryTemplate conditionEx="#{'${result}'='${sCustomer}'}" call="PartialBlockLimit_Step2" />
    <deliveryTemplate conditionEx="#{'${result}'=''">
      <set conditionEx="0@{store(sDbresult,LimitNotAvail)}" />
      <set item="oparam:result" value="_GET_DBRESULT" />
      <set item="oparam:customer" value="${sCustomer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sCustomer}'='' or '${sLimit}'=''}">
      <set conditionEx="0@{store(sDbresult,_DEFAULT_ERR)}" />
      <set item="oparam:result" value="Oshibka servera" />
      <set item="oparam:customer" value="${sCustomer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="limit" />
      <param name="lang" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" value="" />
    </output>
  </template>
  <template procedureName="PartialBlockLimit_Step2" handler="_DBCON" sessionStorage="Memory" sessionLifetime="60" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="partial_block_limit_update">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_limit" type="STRING" value="${sLimit}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='${sLimit}'}">
      <set conditionEx="0@{store(sDbresult,LimitAlreadyEx)}" />
      <set item="oparam:result" value="_GET_DBRESULT" />
      <set item="oparam:customer" value="${sCustomer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='0' and '${sLimit}'='-5'}" terminating="false">
      <set conditionEx="0@{store(sDbresult,LimitActivated)}" />
      <set item="oparam:result" value="Vasha zayavka prinyata. Jdite SMS s rezultatom." />
      <set item="oparam:customer" value="${sCustomer}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='0' and '${sLimit}'='-5'}" connector="_SMSCON_1" />
    <deliveryTemplate conditionEx="#{'${result}'='0' and '${sLimit}'='-0.1'}">
      <set conditionEx="0@{store(sDbresult,LimitDeactivated)}" />
      <set item="oparam:result" value="_GET_DBRESULT" />
      <set item="oparam:customer" value="${sCustomer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${result}'='-5' and '${sLimit}'='-0.1'}">
      <set item="oparam:result" value="Usluga 'Na polnom doverii' uje bila deaktivirovana" />
      <set item="oparam:customer" value="${sCustomer}" />
      <set conditionEx="0@{freeSession}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="limit" />
      <param name="lang" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" value="" />
    </output>
  </template>
  <template procedureName="GetInfo" persistent="false">
    <receiveTemplate>
      <Message type="convertencoding" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(@{newGuid})}">
        <Item customer="${customer}">
          <Content value="${message}" />
          <Sender value="${sender}" />
          <Recipient value="${recipient}" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate terminating="false">
      <set item="oparam:result" value="0" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'#{string-length('${Sender}')}'='12'}" connector="_SMSCON_ISSA" />
    <deliveryTemplate conditionEx="#{matches('${Sender}','[Uu][Ss][Ss][Dd]')}" connector="_USSD_1" />
    <deliveryTemplate connector="_SMSCON_1" />
    <input>
      <param name="sender" />
      <param name="recipient" />
      <param name="message" />
    </input>
    <output>
      <param name="result" />
    </output>
  </template>
  <template procedureName="GetTpPrice" handler="_DBCON" sessionStorage="Memory" sessionLifetime="60" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(SMSGetTpPrice_${customer})}">
        <Item procedureName="other_spikes.tp_change_price">
          <Attribute name="p_msisdn" type="STRING" value="${customer}" />
          <Attribute name="p_new_pt_code" type="STRING" value="${newtariffplan}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate>
      <set item="oparam:result" value="${result}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="lang" />
      <param name="newtariffplan" />
    </input>
    <output>
      <param name="result" value="" />
      <param name="dbresult" value="0" />
    </output>
  </template>
  <template procedureName="GetMonthDetail" handler="_DBCON" sessionStorage="Memory" sessionLifetime="60" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(GetMonthDetail_${customer})}">
        <Item procedureName="other_spikes.USD_CALLS_SMS_GPRS">
          <Attribute name="p_msisdn" type="STRING" value="${customer}" />
          <Attribute name="p_lang" type="STRING" value="${lang}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sService,_GETMONTHDETAIL)}
        @{store(sLang,_GET_MOD_LANGUAGE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate terminating="false">
      <set item="oparam:result" value="Xizmatidan foydalanish uchun so'rovingiz qabul qilindi. Javobni SMS tarzida kuting / Vash zapros prinyat. Ojidayte otvet v vide SMS" />
      <set item="oparam:customer" value="${sCustomer}" />
    </deliveryTemplate>
    <deliveryTemplate call="ALLServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,success)}" />
      <set conditionEx="0@{store(sParams,${no-escape:result})}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="dbresult" value="0" />
      <param name="customer" value="" />
      <param name="result" value="" />
    </output>
  </template>
  <template procedureName="MoveCounter" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(USSDMoveCounter_${customer})}">
        <Item procedureName="other_spikes.change_min_mb">
          <Attribute name="p_msisdn" type="STRING" value="${customer}" />
          <Attribute name="p_value" type="STRING" value="${correctionval}" />
          <Attribute name="p_step" type="STRING" value="1" />
          <Attribute name="result" type="out:STRING" />
        </Item>
        @{store(sCustomer,${customer})}
        @{store(sLang,_GET_MOD_LANGUAGE)}
        @{store(sCorrectionval,${correctionval})}
        @{store(sService,${service})}
        @{store(sModule,_CURRENT_MODULE)}
        @{store(sAction,${action})}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sIsMoveCounter,1)}" />
    <deliveryTemplate conditionEx="false@{store(sInProgress,#{if(number(_GET_SECONDS)-number(${sStartSecond})&lt;number(_SERVICE_TIMETOPROGRESS) and number(_GET_SECONDS)-number(${sStartSecond})&gt;0,'true','false')})}" />
    <deliveryTemplate conditionEx="false@{store(sServiceCode,#{if(matches('${sInProgress}','_IF_TRUE'),'${sServiceCode}','_SERVICE_CODE')})}" />
    <deliveryTemplate conditionEx="false@{store(sGroupName,#{if(matches('${sInProgress}','_IF_TRUE'),'${sGroupName}','_SERVICE_GROUPNAME')})}" />
    <deliveryTemplate conditionEx="false@{store(sParams,_SERVICE_NAME)}" />
    <deliveryTemplate conditionEx="#{'${result}'='SUCCESS'}" call="MoveCounter_Step2" />
    <deliveryTemplate terminating="false">
      <set item="oparam:result" value="Vasha zayavka prinyata. / Sizning arizangiz qabul qilindi." />
    </deliveryTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${result})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="lang" />
      <param name="correctionval" />
      <param name="service" />
      <param name="action" />
    </input>
    <output>
      <param name="result" value="" />
      <param name="dbresult" value="0" />
    </output>
  </template>
  <template procedureName="MoveCounter_Step2" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="serviceorder" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${sCustomer}">
          <Service id="${sService}" action="${sAction}" class="0" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate terminating="false">
      <set item="oparam:result" value="Vasha zayavka prinyata. / Sizning arizangiz qabul qilindi." />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${dbresult}'='0'}" call="MoveCounter_Step3" />
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${dbresult})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="lang" />
      <param name="correctionval" />
      <param name="service" />
      <param name="action" />
    </input>
    <output>
      <param name="result" value="" />
      <param name="dbresult" value="0" />
    </output>
  </template>
  <template procedureName="MoveCounter_Step3" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item procedureName="other_spikes.change_min_mb">
          <Attribute name="p_msisdn" type="STRING" value="${sCustomer}" />
          <Attribute name="p_value" type="STRING" value="${sCorrectionval}" />
          <Attribute name="p_step" type="STRING" value="2" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate call="ServiceStringFormat">
      <set conditionEx="0@{store(sDbresult,${result})}" />
      <set item="iparam:content" value="" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="lang" />
      <param name="correctionval" />
    </input>
    <output>
      <param name="result" value="" />
      <param name="dbresult" value="0" />
    </output>
  </template>
  <template procedureName="MoveCounterH" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(USSDMoveCounterH_${customer})}">
        <Item procedureName="other_spikes.change_min_mb_h">
          <Attribute name="p_msisdn" type="STRING" value="${customer}" />
          <Attribute name="p_lang" type="STRING" value="${lang}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate>
      <set item="oparam:result" value="Vasha zayavka prinyata. / Sizning arizangiz qabul qilindi." />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="result" value="" />
      <param name="dbresult" value="0" />
    </output>
  </template>
  <template procedureName="MoveCounterV" handler="_DBCON" sessionStorage="Memory" sessionLifetime="300" persistent="true">
    <receiveTemplate>
      <Message type="dummyrequest" process="dispatcher" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(USSDMoveCounterV_${customer})}">
        <Item procedureName="other_spikes.change_min_mb_v">
          <Attribute name="p_msisdn" type="STRING" value="${customer}" />
          <Attribute name="result" type="out:STRING" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate>
      <set item="oparam:result" value="${result}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
      <param name="lang" />
    </input>
    <output>
      <param name="result" value="" />
      <param name="dbresult" value="0" />
    </output>
  </template>
  <template procedureName="GetBalance" sessionStorage="Memory" sessionLifetime="20" persistent="true">
    <receiveTemplate>
      <Message type="retrievecustomerdata" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="${SessionId}">
        <Item customer="${customer}" subject="balance">
          <Attribute name="unpayment" value="0" />
          <Attribute name="requestcountertype" value="1" />
        </Item>
      </Message>
    </receiveTemplate>
    <deliveryTemplate>
      <set item="oparam:result" value="${balanceintpartdotpart}" />
    </deliveryTemplate>
    <input>
      <param name="customer" />
    </input>
    <output>
      <param name="result" value="" />
      <param name="dbresult" value="0" />
    </output>
  </template>
  <template procedureName="TestRequest" sessionStorage="Memory" sessionLifetime="20" persistent="false">
    <receiveTemplate>
      <Message type="verificationrequest" initiator="_CURRENT_INITIATOR" id="@{newGuid}" session_id="@{setSessionId(@{newGuid})}">
        <Item customer="">
          <Attribute name="checkivrservice" value="0" />
          <Attribute name="checkblocks" value="0" />
        </Item>
        @{store(sTest,${message})}
        @{store(sModule,_CURRENT_MODULE)}
      </Message>
    </receiveTemplate>
    <deliveryTemplate conditionEx="false@{store(sLang,_INLANGUAGE)}" />
    <deliveryTemplate conditionEx="#{'${sTest}'='test12345'}">
      <set item="oparam:TEST1" value="ERR_1" />
      <set item="oparam:TEST2" value="${sTest}" />
    </deliveryTemplate>
    <deliveryTemplate conditionEx="#{'${sTest}'='test1' or '${sTest}'='test2'}">
      <set item="oparam:TEST1" value="#{if('#{document('temp\1.xml')/Test/Item[@name='${sTest}']/@result}'!='','#{document('temp\1.xml')/Test/Item[@name='${sTest}']/@result}','ERR_2')}" />
      <set item="oparam:TEST2" value="${sTest}" />
    </deliveryTemplate>
    <deliveryTemplate>
      <set item="oparam:TEST1" value="1=#{document('temp\1.xml')/Test/Item[@name='test1']/@result} 2=#{document('temp\1.xml')/Test/Item[@name='test2']/@result}" />
      <set item="oparam:TEST2" value="${sTest}" />
    </deliveryTemplate>
    <input>
      <param name="message" />
    </input>
    <output>
      <param name="TEST1" />
      <param name="TEST2" />
    </output>
  </template>
</templates>