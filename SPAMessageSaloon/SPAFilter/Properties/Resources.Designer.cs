//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPAFilter.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SPAFilter.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {1} directory: &quot;{0}&quot; not found.
        /// </summary>
        public static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap file7 {
            get {
                object obj = ResourceManager.GetObject("file7", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File &quot;{0}&quot; not found.
        /// </summary>
        public static string FileNotFound {
            get {
                return ResourceManager.GetString("FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activator &quot;{0}&quot; already exist..
        /// </summary>
        public static string Filter_ActivatorAlreadyExist {
            get {
                return ResourceManager.GetString("Filter_ActivatorAlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add activator.
        /// </summary>
        public static string Filter_AddActivator {
            get {
                return ResourceManager.GetString("Filter_AddActivator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You can create Service Catalog only with ROBP operations..
        /// </summary>
        public static string Filter_GenerateSCWithoutOperations {
            get {
                return ResourceManager.GetString("Filter_GenerateSCWithoutOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на When initializing instances: &quot;{0}&quot; - {1} scenario collisions were found!
        ///For correct work of a filter, please choose only one instance (host type)..
        /// </summary>
        public static string Filter_InitializeActivatorsWarning {
            get {
                return ResourceManager.GetString("Filter_InitializeActivatorsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong file &quot;{0}&quot;. Missing some required columns. 
        ///Columns names should be like:
        ///&quot;{1}&quot;.
        /// </summary>
        public static string Filter_MissingColumn {
            get {
                return ResourceManager.GetString("Filter_MissingColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter is not enabled!.
        /// </summary>
        public static string Filter_NotEnabled {
            get {
                return ResourceManager.GetString("Filter_NotEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No worksheet found.
        /// </summary>
        public static string Filter_NoWorksheetFound {
            get {
                return ResourceManager.GetString("Filter_NoWorksheetFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must select a folder with exported ROBP&apos;s host type directories..
        /// </summary>
        public static string Filter_ROBPOperationdDirInvalid {
            get {
                return ResourceManager.GetString("Filter_ROBPOperationdDirInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong column name before &quot;{0}&quot; from file &quot;{1}&quot;.
        ///Columns names and orders must be like:
        ///&quot;{2}&quot;.
        /// </summary>
        public static string Filter_WrongColumnStatement {
            get {
                return ResourceManager.GetString("Filter_WrongColumnStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap find {
            get {
                object obj = ResourceManager.GetObject("find", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap folder2 {
            get {
                object obj = ResourceManager.GetObject("folder2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add configuration application file with service instances. All scenarios and commands for each instance will be added..
        /// </summary>
        public static string Form_AddActivator {
            get {
                return ResourceManager.GetString("Form_AddActivator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This app can be used for fix and improve the SPA configuration, as well as for convenient viewing..
        /// </summary>
        public static string Form_Description {
            get {
                return ResourceManager.GetString("Form_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export Path.
        /// </summary>
        public static string Form_ExportPath {
            get {
                return ResourceManager.GetString("Form_ExportPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter.
        /// </summary>
        public static string Form_Filter {
            get {
                return ResourceManager.GetString("Form_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Generate SC.
        /// </summary>
        public static string Form_GenerateSC {
            get {
                return ResourceManager.GetString("Form_GenerateSC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please filter files.
        /// </summary>
        public static string Form_GenerateSC_NotFileredROBPOps {
            get {
                return ResourceManager.GetString("Form_GenerateSC_NotFileredROBPOps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No operations found.
        /// </summary>
        public static string Form_GenerateSC_NotFoundAnyOperations {
            get {
                return ResourceManager.GetString("Form_GenerateSC_NotFoundAnyOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на       Generate SC.
        /// </summary>
        public static string Form_GenerateSC2 {
            get {
                return ResourceManager.GetString("Form_GenerateSC2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на      Filter [F5].
        /// </summary>
        public static string Form_Get {
            get {
                return ResourceManager.GetString("Form_Get", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to delete selected file(s) ?.
        /// </summary>
        public static string Form_GridView_DeleteSelected {
            get {
                return ResourceManager.GetString("Form_GridView_DeleteSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configuration application is incorrect or scenario collisions were found. Please check instances with same host types..
        /// </summary>
        public static string Form_GridView_IncorrectConfig {
            get {
                return ResourceManager.GetString("Form_GridView_IncorrectConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Incorrect ROBP operation.
        /// </summary>
        public static string Form_GridView_IncorrectROBPOperation {
            get {
                return ResourceManager.GetString("Form_GridView_IncorrectROBPOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Subscenario.
        /// </summary>
        public static string Form_GridView_IsSubScenario {
            get {
                return ResourceManager.GetString("Form_GridView_IsSubScenario", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Business process doesn&apos;t have service catalog call.
        /// </summary>
        public static string Form_GridView_NotFoundServiceCatalogCall {
            get {
                return ResourceManager.GetString("Form_GridView_NotFoundServiceCatalogCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scenario has some commands which don&apos;t exist.
        /// </summary>
        public static string Form_GridView_NotFoundSomeCommands {
            get {
                return ResourceManager.GetString("Form_GridView_NotFoundSomeCommands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sub-scenario has some commands which don&apos;t exist.
        /// </summary>
        public static string Form_GridView_NotFoundSomeCommandsInSub {
            get {
                return ResourceManager.GetString("Form_GridView_NotFoundSomeCommandsInSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Business process has some operations which don&apos;t exist.
        /// </summary>
        public static string Form_GridView_NotFoundSomeOPs {
            get {
                return ResourceManager.GetString("Form_GridView_NotFoundSomeOPs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scenario for this operation doesn&apos;t exist.
        /// </summary>
        public static string Form_GridView_NotFoundSomeScenarios {
            get {
                return ResourceManager.GetString("Form_GridView_NotFoundSomeScenarios", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please select a row.
        /// </summary>
        public static string Form_GridView_NotSelectedAnyRows {
            get {
                return ResourceManager.GetString("Form_GridView_NotSelectedAnyRows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Xml file is incorrect!.
        /// </summary>
        public static string Form_GridView_XMLFileIsIncorrect {
            get {
                return ResourceManager.GetString("Form_GridView_XMLFileIsIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на      Open xlsx.
        /// </summary>
        public static string Form_OpenXksx {
            get {
                return ResourceManager.GetString("Form_OpenXksx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pretty print.
        /// </summary>
        public static string Form_PrintXMLFiles_Button {
            get {
                return ResourceManager.GetString("Form_PrintXMLFiles_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string Form_PrintXMLFiles_Cancel {
            get {
                return ResourceManager.GetString("Form_PrintXMLFiles_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Some ({0}) errors found:
        ///
        ///{1}.
        /// </summary>
        public static string Form_PrintXMLFiles_Error {
            get {
                return ResourceManager.GetString("Form_PrintXMLFiles_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you really want to print all {0} xml files?.
        /// </summary>
        public static string Form_PrintXMLFiles_Question {
            get {
                return ResourceManager.GetString("Form_PrintXMLFiles_Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} out of {1} xml files were printed..
        /// </summary>
        public static string Form_PrintXMLFiles_Result {
            get {
                return ResourceManager.GetString("Form_PrintXMLFiles_Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Successfully completed..
        /// </summary>
        public static string Form_PrintXMLFiles_Successfully {
            get {
                return ResourceManager.GetString("Form_PrintXMLFiles_Successfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This tool converts all filtered XML files in a human-readable format.
        /// </summary>
        public static string Form_PrintXMLFiles_ToolTip {
            get {
                return ResourceManager.GetString("Form_PrintXMLFiles_ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RD Services.
        /// </summary>
        public static string Form_RDServices {
            get {
                return ResourceManager.GetString("Form_RDServices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh. All instance settings with related scenarios and commands, will be reload..
        /// </summary>
        public static string Form_Refresh {
            get {
                return ResourceManager.GetString("Form_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reload. All activator configuration application with related instances will be reload..
        /// </summary>
        public static string Form_Reload {
            get {
                return ResourceManager.GetString("Form_Reload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exclude service instance from the list. All related scenarios and commands will be also excluded..
        /// </summary>
        public static string Form_RemoveInstance {
            get {
                return ResourceManager.GetString("Form_RemoveInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на       Reset [F6].
        /// </summary>
        public static string Form_Reset {
            get {
                return ResourceManager.GetString("Form_Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на      Root.
        /// </summary>
        public static string Form_Root {
            get {
                return ResourceManager.GetString("Form_Root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Generate Service catalog by ROBP operations. Before you perform, you must filter the necessary ROBP operations or perform a Reset..
        /// </summary>
        public static string Form_ToolTip_ButtonGenerateSC {
            get {
                return ResourceManager.GetString("Form_ToolTip_ButtonGenerateSC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset filter.
        /// </summary>
        public static string Form_ToolTip_buttonReset {
            get {
                return ResourceManager.GetString("Form_ToolTip_buttonReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export folder path.
        /// </summary>
        public static string Form_ToolTip_ExportSCPath {
            get {
                return ResourceManager.GetString("Form_ToolTip_ExportSCPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get all matches by filter.
        /// </summary>
        public static string Form_ToolTip_FilterButton {
            get {
                return ResourceManager.GetString("Form_ToolTip_FilterButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Excel file path of RD services for fill CFS description. Columns names and orders must be like:
        ///&quot;{0}&quot;.
        /// </summary>
        public static string Form_ToolTip_OpenSCXlsx {
            get {
                return ResourceManager.GetString("Form_ToolTip_OpenSCXlsx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get excel file of RD services for fill CFS description. Columns names and orders must be like:
        ///&quot;{0}&quot;.
        /// </summary>
        public static string Form_ToolTip_OpenSevExelButton {
            get {
                return ResourceManager.GetString("Form_ToolTip_OpenSevExelButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open folder with Business Processes.
        /// </summary>
        public static string Form_ToolTip_ProcessesButtonOpen {
            get {
                return ResourceManager.GetString("Form_ToolTip_ProcessesButtonOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open folder with Operations.
        /// </summary>
        public static string Form_ToolTip_ROBPOperationButtonOpen {
            get {
                return ResourceManager.GetString("Form_ToolTip_ROBPOperationButtonOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open folder for export.
        /// </summary>
        public static string Form_ToolTip_RootSCExportPathButton {
            get {
                return ResourceManager.GetString("Form_ToolTip_RootSCExportPathButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To search for a specified pattern, you can use % symbol. Example: %Assign%.
        /// </summary>
        public static string Form_ToolTip_SearchPattern {
            get {
                return ResourceManager.GetString("Form_ToolTip_SearchPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Service catalog file.
        /// </summary>
        public static string Form_ToolTip_ServiceCatalogOpenButton {
            get {
                return ResourceManager.GetString("Form_ToolTip_ServiceCatalogOpenButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap generatesc {
            get {
                object obj = ResourceManager.GetObject("generatesc", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        public static System.Drawing.Icon icons8 {
            get {
                object obj = ResourceManager.GetObject("icons8", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icons8_minus_20 {
            get {
                object obj = ResourceManager.GetObject("icons8_minus_20", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icons8_plus_20 {
            get {
                object obj = ResourceManager.GetObject("icons8_plus_20", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap icons8_synchronize_20 {
            get {
                object obj = ResourceManager.GetObject("icons8_synchronize_20", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Xml file &quot;{0}&quot; is invalid.
        /// </summary>
        public static string InvalidXml {
            get {
                return ResourceManager.GetString("InvalidXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap reload {
            get {
                object obj = ResourceManager.GetObject("reload", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap reset2 {
            get {
                object obj = ResourceManager.GetObject("reset2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Activator config &quot;{0}&quot; is incorrect.
        /// </summary>
        public static string ServiceActivator_ConfigInvalid {
            get {
                return ResourceManager.GetString("ServiceActivator_ConfigInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} already exist..
        /// </summary>
        public static string ServiceCatalog_AlreadyExist {
            get {
                return ResourceManager.GetString("ServiceCatalog_AlreadyExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Service Catalog is invalid. &apos;{0}&apos; already exist..
        /// </summary>
        public static string ServiceCatalog_DoubleScenario {
            get {
                return ResourceManager.GetString("ServiceCatalog_DoubleScenario", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Some scenarios are invalid. No attributes found..
        /// </summary>
        public static string ServiceCatalog_InvalidScenario {
            get {
                return ResourceManager.GetString("ServiceCatalog_InvalidScenario", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Xml file &quot;{0}&quot; is invalid.
        /// </summary>
        public static string ServiceCatalog_InvalidXml {
            get {
                return ResourceManager.GetString("ServiceCatalog_InvalidXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is invalid. Attribute &quot;hostType&quot; not found..
        /// </summary>
        public static string ServiceCatalog_NoHostTypeAttr {
            get {
                return ResourceManager.GetString("ServiceCatalog_NoHostTypeAttr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Service Catalog is invalid. {0} doesn&apos;t have attribute \&quot;name\&quot; or value is empty..
        /// </summary>
        public static string ServiceCatalog_NoNameAttribute {
            get {
                return ResourceManager.GetString("ServiceCatalog_NoNameAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Service Catalog is invalid. No RFS found..
        /// </summary>
        public static string ServiceCatalog_NoRFSFound {
            get {
                return ResourceManager.GetString("ServiceCatalog_NoRFSFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not found {0}.
        /// </summary>
        public static string ServiceCatalog_NotFound {
            get {
                return ResourceManager.GetString("ServiceCatalog_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Service Catalog is invalid. Attribute \&quot;scenarioPrefix\&quot; not found..
        /// </summary>
        public static string ServiceCatalog_NotFoundScenarioPrefix {
            get {
                return ResourceManager.GetString("ServiceCatalog_NotFoundScenarioPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is invalid. Attribute &quot;type&quot; not found in scenario &quot;{1}&quot;.
        /// </summary>
        public static string ServiceCatalog_NotFoundTyoeAttribute {
            get {
                return ResourceManager.GetString("ServiceCatalog_NotFoundTyoeAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Some RFS are invalid. No attributes found..
        /// </summary>
        public static string ServiceCatalog_RFSNoAttributes {
            get {
                return ResourceManager.GetString("ServiceCatalog_RFSNoAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scenario &quot;{0}&quot; is invalid. Not found any RFS..
        /// </summary>
        public static string ServiceCatalog_ScenarioNotFoundRFS {
            get {
                return ResourceManager.GetString("ServiceCatalog_ScenarioNotFoundRFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Scenario &quot;{0}&quot; has RFS with different hostTypes - &quot;{1}&quot;.
        /// </summary>
        public static string ServiceCatalog_ScenarioWithDifferentHostType {
            get {
                return ResourceManager.GetString("ServiceCatalog_ScenarioWithDifferentHostType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attributes: &apos;@path&apos; | &apos;@xml&apos; not found. Or &quot;dictionary&quot; node not found..
        /// </summary>
        public static string ServiceInstance_AttributesPathXmlNotFound {
            get {
                return ResourceManager.GetString("ServiceInstance_AttributesPathXmlNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attribute: &apos;@Root&apos; not found in file dictionary: &quot;{0}&quot;.
        /// </summary>
        public static string ServiceInstance_AttributesRootNotFound {
            get {
                return ResourceManager.GetString("ServiceInstance_AttributesRootNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Directory: &quot;{0}&quot; not found. Final path: &quot;{1}&quot;.
        /// </summary>
        public static string ServiceInstance_DirNotFound {
            get {
                return ResourceManager.GetString("ServiceInstance_DirNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Directory: &quot;{0}&quot; not found when initializing file dictionary: &quot;{1}&quot;.
        /// </summary>
        public static string ServiceInstance_DirNotFoundWithDescription {
            get {
                return ResourceManager.GetString("ServiceInstance_DirNotFoundWithDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attribute: &apos;@hardwareID&apos; not found in serviceInstance.
        /// </summary>
        public static string ServiceInstance_NotFoundHardwareID {
            get {
                return ResourceManager.GetString("ServiceInstance_NotFoundHardwareID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attribute: &apos;@dir&apos; not found in &quot;fileScenarioSource&quot;. Or &apos;scenarios&apos; node not found..
        /// </summary>
        public static string ServiceInstance_NotFoundScenriosDir {
            get {
                return ResourceManager.GetString("ServiceInstance_NotFoundScenriosDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap xls1 {
            get {
                object obj = ResourceManager.GetObject("xls1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap xml8 {
            get {
                object obj = ResourceManager.GetObject("xml8", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
