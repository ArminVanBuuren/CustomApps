<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="icons8" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\icons8.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="icons8_minus_20" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\icons8-minus-20.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="icons8_plus_20" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\icons8-plus-20.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="icons8_synchronize_20" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\resources\icons8-synchronize-20.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Form_GridView_DeleteSelected" xml:space="preserve">
    <value>Do you want to delete selected file(s) ?</value>
  </data>
  <data name="Form_PrintXMLFiles_Error" xml:space="preserve">
    <value>Some ({0}) errors found:

{1}</value>
  </data>
  <data name="Form_PrintXMLFiles_Successfully" xml:space="preserve">
    <value>Successfully completed.</value>
  </data>
  <data name="Form_GenerateSC_NotFoundAnyOperations" xml:space="preserve">
    <value>No operations found</value>
  </data>
  <data name="Form_GenerateSC_NotFileredROBPOps" xml:space="preserve">
    <value>Please filter files</value>
  </data>
  <data name="Form_GridView_IncorrectConfig" xml:space="preserve">
    <value>Configuration application is incorrect or scenario collisions were found. Please check instances with same host types.</value>
  </data>
  <data name="Form_GridView_IsSubScenario" xml:space="preserve">
    <value>Subscenario</value>
  </data>
  <data name="Form_GridView_NotFoundServiceCatalogCall" xml:space="preserve">
    <value>Business process doesn't have service catalog call</value>
  </data>
  <data name="Form_GridView_NotFoundSomeCommands" xml:space="preserve">
    <value>Scenario has some commands which don't exist</value>
  </data>
  <data name="Form_GridView_NotFoundSomeCommandsInSub" xml:space="preserve">
    <value>Sub-scenario has some commands which don't exist</value>
  </data>
  <data name="Form_GridView_NotFoundSomeOPs" xml:space="preserve">
    <value>Business process has some operations which don't exist</value>
  </data>
  <data name="Form_GridView_NotFoundSomeScenarios" xml:space="preserve">
    <value>Scenario for this operation doesn't exist</value>
  </data>
  <data name="Form_GridView_NotSelectedAnyRows" xml:space="preserve">
    <value>Please select a row</value>
  </data>
  <data name="Form_PrintXMLFiles_ToolTip" xml:space="preserve">
    <value>Pretty print all filtered XML files</value>
  </data>
  <data name="Form_ToolTip_SearchPattern" xml:space="preserve">
    <value>To search for a specified pattern, you can use % symbol. Example: %Assign%</value>
  </data>
  <data name="Form_PrintXMLFiles_Button" xml:space="preserve">
    <value>Pretty print</value>
  </data>
  <data name="Form_PrintXMLFiles_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Form_PrintXMLFiles_Result" xml:space="preserve">
    <value>{0} out of {1} xml files were printed.</value>
  </data>
  <data name="Form_PrintXMLFiles_Question" xml:space="preserve">
    <value>Do you really want to print all {0} xml files?</value>
  </data>
  <data name="file7" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\file7.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="folder2" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\folder2.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="reload" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\reload.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="xls1" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\xls1.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="xml8" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\xml8.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Form_ToolTip_ButtonGenerateSC" xml:space="preserve">
    <value>Generate Service catalog by ROBP operations</value>
  </data>
  <data name="Form_ToolTip_ExportSCPath" xml:space="preserve">
    <value>Export folder path</value>
  </data>
  <data name="Form_ToolTip_FilterButton" xml:space="preserve">
    <value>Get all matches by filter</value>
  </data>
  <data name="Form_ToolTip_OpenSCXlsx" xml:space="preserve">
    <value>Excel file path of RD services for fill CFS description. Columns names and orders must be like:
'{0}'</value>
  </data>
  <data name="Form_ToolTip_OpenSevExelButton" xml:space="preserve">
    <value>Get excel file of RD services for fill CFS description. Columns names and orders must be like:
'{0}'</value>
  </data>
  <data name="Form_ToolTip_ProcessesButtonOpen" xml:space="preserve">
    <value>Open folder with Business Processes</value>
  </data>
  <data name="Form_ToolTip_ROBPOperationButtonOpen" xml:space="preserve">
    <value>Open folder with Operations</value>
  </data>
  <data name="Form_ToolTip_RootSCExportPathButton" xml:space="preserve">
    <value>Open export folder path</value>
  </data>
  <data name="Form_ToolTip_ServiceCatalogOpenButton" xml:space="preserve">
    <value>Open Service catalog file</value>
  </data>
  <data name="Form_GridView_XMLFileIsIncorrect" xml:space="preserve">
    <value>Xml file is incorrect!</value>
  </data>
  <data name="Form_GridView_IncorrectROBPOperation" xml:space="preserve">
    <value>Incorrect ROBP operation</value>
  </data>
  <data name="find" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\find.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="generatesc" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\generatesc.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DirectoryNotFound" xml:space="preserve">
    <value>{1} directory: "{0}" not found</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>File "{0}" not found</value>
  </data>
  <data name="Filter_ActivatorAlreadyExist" xml:space="preserve">
    <value>Activator "{0}" already exist.</value>
  </data>
  <data name="Filter_AddActivator" xml:space="preserve">
    <value>Add activator</value>
  </data>
  <data name="Filter_GenerateSCWithoutOperations" xml:space="preserve">
    <value>You can create Service Catalog only with ROBP operations.</value>
  </data>
  <data name="Filter_InitializeActivatorsWarning" xml:space="preserve">
    <value>When initializing instances:'{0}' - {1} scenario collisions were found!
For correct work of a filter, please choose only one instance (host type).</value>
  </data>
  <data name="Filter_MissingColumn" xml:space="preserve">
    <value>Wrong file '{0}'. Missing some required columns. 
Columns names should be like:
'{1}'</value>
  </data>
  <data name="Filter_NotEnabled" xml:space="preserve">
    <value>Filter is not enabled!</value>
  </data>
  <data name="Filter_NoWorksheetFound" xml:space="preserve">
    <value>No worksheet found</value>
  </data>
  <data name="Filter_ROBPOperationdDirInvalid" xml:space="preserve">
    <value>You must select a folder with exported ROBP's host type directories.</value>
  </data>
  <data name="Filter_WrongColumnStatement" xml:space="preserve">
    <value>Wrong column name before '{0}' from file '{1}'.
Columns names and orders must be like:
'{2}'</value>
  </data>
  <data name="InvalidXml" xml:space="preserve">
    <value>Xml file "{0}" is invalid</value>
  </data>
  <data name="ServiceActivator_ConfigInvalid" xml:space="preserve">
    <value>Activator config "{0}" is incorrect</value>
  </data>
  <data name="ServiceCatalog_AlreadyExist" xml:space="preserve">
    <value>{0} already exist.</value>
  </data>
  <data name="ServiceCatalog_DoubleScenario" xml:space="preserve">
    <value>Service Catalog is invalid. '{0}' already exist.</value>
  </data>
  <data name="ServiceCatalog_InvalidScenario" xml:space="preserve">
    <value>Some scenarios are invalid. No attributes found.</value>
  </data>
  <data name="ServiceCatalog_InvalidXml" xml:space="preserve">
    <value>Xml file "{0}" is invalid</value>
  </data>
  <data name="ServiceCatalog_NoHostTypeAttr" xml:space="preserve">
    <value>{0} is invalid. Attribute "hostType" not found.</value>
  </data>
  <data name="ServiceCatalog_NoNameAttribute" xml:space="preserve">
    <value>Service Catalog is invalid. {0} doesn't have attribute \"name\" or value is empty.</value>
  </data>
  <data name="ServiceCatalog_NoRFSFound" xml:space="preserve">
    <value>Service Catalog is invalid. No RFS found.</value>
  </data>
  <data name="ServiceCatalog_NotFound" xml:space="preserve">
    <value>Not found {0}</value>
  </data>
  <data name="ServiceCatalog_NotFoundScenarioPrefix" xml:space="preserve">
    <value>Service Catalog is invalid. Attribute \"scenarioPrefix\" not found.</value>
  </data>
  <data name="ServiceCatalog_NotFoundTyoeAttribute" xml:space="preserve">
    <value>{0} is invalid. Attribute "type" not found in scenario "{1}"</value>
  </data>
  <data name="ServiceCatalog_RFSNoAttributes" xml:space="preserve">
    <value>Some RFS are invalid. No attributes found.</value>
  </data>
  <data name="ServiceCatalog_ScenarioNotFoundRFS" xml:space="preserve">
    <value>Scenario "{0}" is invalid. Not found any RFS.</value>
  </data>
  <data name="ServiceCatalog_ScenarioWithDifferentHostType" xml:space="preserve">
    <value>Scenario "{0}" has RFS with different hostTypes - "{1}"</value>
  </data>
  <data name="ServiceInstance_AttributesPathXmlNotFound" xml:space="preserve">
    <value>Attributes: '@path' | '@xml' not found. Or "dictionary" node not found.</value>
  </data>
  <data name="ServiceInstance_AttributesRootNotFound" xml:space="preserve">
    <value>Attribute: '@Root' not found in file dictionary: "{0}"</value>
  </data>
  <data name="ServiceInstance_DirNotFound" xml:space="preserve">
    <value>Directory: "{0}" not found. Final path: "{1}"</value>
  </data>
  <data name="ServiceInstance_DirNotFoundWithDescription" xml:space="preserve">
    <value>Directory: "{0}" not found when initializing file dictionary: "{1}"</value>
  </data>
  <data name="ServiceInstance_NotFoundHardwareID" xml:space="preserve">
    <value>Attribute: '@hardwareID' not found in serviceInstance</value>
  </data>
  <data name="ServiceInstance_NotFoundScenriosDir" xml:space="preserve">
    <value>Attribute: '@dir' not found in "fileScenarioSource". Or 'scenarios' node not found.</value>
  </data>
  <data name="Form_ExportPath" xml:space="preserve">
    <value>Export Path</value>
  </data>
  <data name="Form_Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="Form_OpenXksx" xml:space="preserve">
    <value>     Open xlsx</value>
  </data>
  <data name="Form_RDServices" xml:space="preserve">
    <value>RD Services</value>
  </data>
  <data name="Form_Root" xml:space="preserve">
    <value>     Root</value>
  </data>
  <data name="Form_GenerateSC" xml:space="preserve">
    <value>Generate SC</value>
  </data>
  <data name="Form_GenerateSC2" xml:space="preserve">
    <value>      Generate SC</value>
  </data>
  <data name="Form_AddActivator" xml:space="preserve">
    <value>Add Activator Instances</value>
  </data>
  <data name="Form_Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Form_Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="Form_RemoveInstance" xml:space="preserve">
    <value>Remove instance from the list</value>
  </data>
  <data name="Form_Get" xml:space="preserve">
    <value>     Filter [F5]</value>
  </data>
</root>