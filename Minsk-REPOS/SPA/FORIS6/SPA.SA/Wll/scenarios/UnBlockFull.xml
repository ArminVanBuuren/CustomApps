<scenario name="UnBlockFull">
  <objectList>
    <object name="BySubscribersSplitter" class="FORIS.ServiceProvisioning.MmlProcessing.SPF.RequestSplitterBySubscribers" assembly="FORIS.SPA.MmlProcessing.dll" />
    <object name="Dequeuer" class="FORIS.ServiceProvisioning.MmlProcessing.SPF.RequestDequeuer" assembly="FORIS.SPA.MmlProcessing.dll" />
    <object name="Commander" class="FORIS.ServiceProvisioning.MmlProcessing.SPF.Processors.RequestProcessor" assembly="FORIS.SPA.MmlProcessing.dll" />
    <object name="ResponseAssembler" class="FORIS.ServiceProvisioning.MmlProcessing.SPF.ResponseAssembler" assembly="FORIS.SPA.MmlProcessing.dll" />
    <object name="IfConditionXmlResolver" class="FORIS.ScenarioProcessing.CommonUnits.IfConditionXmlResolver" assembly="FORIS.SPA.SPF.dll" />
    <object name="DummyResponder" class="FORIS.ServiceProvisioning.MmlProcessing.SPF.DummyResponder" assembly="FORIS.SPA.MmlProcessing.dll" />
    <object name="IfMultipleXmlConditionsResolver" class="FORIS.ScenarioProcessing.CommonUnits.IfMultipleXmlConditionsResolver" assembly="FORIS.SPA.SPF.dll" />
  </objectList>
  <automat>
    <node name="BySubscribersSplitter" object="BySubscribersSplitter">
      <resultlist>
        <result value="0" node="SingleSubscriberRequestDequeuer" />
      </resultlist>
    </node>
    <node name="SingleSubscriberRequestDequeuer" object="Dequeuer">
      <resultlist>
        <result value="0" node="IfBlockNode" />
        <result value="1" node="" />
      </resultlist>
      <parameterslist>
        <param name="queueName" value="requestsSplittedBySubscriberQueue" />
      </parameterslist>
    </node>
    <node name="IfBlockNode" object="IfMultipleXmlConditionsResolver">
      <resultlist>
        <result value="0" node="IfCB108Node" />
        <result value="1" node="ExitDummyResponderNode" />
      </resultlist>
      <parameterslist>
        <param name="ObjectNameInContext" value="request" />
        <param name="MultiLevelCondition" value="
    ((//WithdrawalList/CBBLKLOST)
    AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKCHK)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKKEEP)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKTIME)
	AND (NOT //RegisteredList/FRBLKUSER)
	AND (NOT //RegisteredList/FRBLCNCOT))
    
    OR
    
    ((//WithdrawalList/FRBLKPAY)
    AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKCHK)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKKEEP)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKTIME)
	AND (NOT //RegisteredList/FRBLKUSER)
	AND (NOT //RegisteredList/FRBLCNCOT))
    
    OR
    
    ((//WithdrawalList/FRBLKTIME)
    AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKCHK)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKKEEP)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/CBBLKLOST)
	AND (NOT //RegisteredList/FRBLKUSER)
	AND (NOT //RegisteredList/FRBLCNCOT))
    
    OR
    
    ((//WithdrawalList/FRBLKFIN)
    AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKCHK)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKKEEP)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKTIME)
	AND (NOT //RegisteredList/FRBLKUSER)
	AND (NOT //RegisteredList/FRBLCNCOT))
    
    OR
    
    ((//WithdrawalList/FRBLKKEEP)
    AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKCHK)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKTIME)
	AND (NOT //RegisteredList/FRBLKUSER)
	AND (NOT //RegisteredList/FRBLCNCOT))
    
    OR
    
    ((//WithdrawalList/FRBLKUSER)
	AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKCHK)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKTIME)
	AND (NOT //RegisteredList/FRBLKKEEP)
	AND (NOT //RegisteredList/FRBLCNCOT))
    
    OR
    
    ((//WithdrawalList/FRBLKCHK)
	AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKUSER)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKTIME)
	AND (NOT //RegisteredList/FRBLKKEEP)
	AND (NOT //RegisteredList/FRBLCNCOT))
	
    OR
    
    ((//WithdrawalList/FRBLKP)
	AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKUSER)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKCHK)
	AND (NOT //RegisteredList/FRBLKTIME)
	AND (NOT //RegisteredList/FRBLKKEEP)
	AND (NOT //RegisteredList/FRBLCNCOT))   
	
    OR
    
    ((//WithdrawalList/FRBLKTIME)
	AND (NOT //RegisteredList/BLTDLIM)
    AND (NOT //RegisteredList/FRBLKUSER)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKCHK)
	AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKKEEP)
	AND (NOT //RegisteredList/FRBLCNCOT))
	
    OR
    
    ((//WithdrawalList/BLTDLIM)
	AND (NOT //RegisteredList/FRBLKTIME)
    AND (NOT //RegisteredList/FRBLKUSER)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKCHK)
	AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKKEEP)
	AND (NOT //RegisteredList/FRBLCNCOT))

    OR
    
    ((//WithdrawalList/FRBLCNCOT)
	AND (NOT //RegisteredList/FRBLKTIME)
    AND (NOT //RegisteredList/FRBLKUSER)
    AND (NOT //RegisteredList/CBBLKLOST)
    AND (NOT //RegisteredList/FRBLKFIN)
    AND (NOT //RegisteredList/FRBLKPAY)
    AND (NOT //RegisteredList/FRBLKCHK)
	AND (NOT //RegisteredList/FRBLKP)
	AND (NOT //RegisteredList/FRBLKKEEP)
	AND (NOT //RegisteredList/BLTDLIM))		
    " />
      </parameterslist>
    </node>
    <node name="IfCB108Node" object="IfConditionXmlResolver">
      <resultlist>
        <result value="0" node="UnBlock_mdNode" />
        <result value="1" node="UnBlockNode" />
      </resultlist>
      <parameterslist>
        <param name="ObjectNameInContext" value="request" />
        <param name="XmlPath:1" value="ExtendedRequestMessage/AdditionalData/RegisteredList/CB108" />
        <param name="Value:1" value="" />
      </parameterslist>
    </node>
    <node name="UnBlockNode" object="Commander">
      <resultlist>
        <result value="0" node="ARNode" />
        <result value="" node="ResponseAssembler" />
      </resultlist>
      <parameterslist>
        <param name="CommandSource" value="Dictionary" />
        <param name="AppendSubscribersData" value="false" />
        <param name="Command" value="UnBlock" />
        <param name="DynamicObject" value="(empty)" />
      </parameterslist>
    </node>
    <node name="UnBlock_mdNode" object="Commander">
      <resultlist>
        <result value="0" node="ARNode" />
        <result value="" node="ResponseAssembler" />
      </resultlist>
      <parameterslist>
        <param name="CommandSource" value="Dictionary" />
        <param name="AppendSubscribersData" value="false" />
        <param name="Command" value="UnBlock_md" />
        <param name="DynamicObject" value="(empty)" />
      </parameterslist>
    </node>
    <node name="ARNode" object="Commander">
      <resultlist>
        <result value="0" node="IfFR1002Node" />
        <result value="" node="ResponseAssembler" />
      </resultlist>
      <parameterslist>
        <param name="CommandSource" value="Dictionary" />
        <param name="AppendSubscribersData" value="false" />
        <param name="Command" value="AR_ALLPLMN" />
        <param name="DynamicObject" value="(empty)" />
      </parameterslist>
    </node>
    <node name="IfFR1002Node" object="IfConditionXmlResolver">
      <resultlist>
        <result value="0" node="UnBlockGPRSNode" />
        <result value="1" node="ExitDummyResponderNode" />
      </resultlist>
      <parameterslist>
        <param name="ObjectNameInContext" value="request" />
        <param name="XmlPath:1" value="ExtendedRequestMessage/AdditionalData/RegisteredList/FR1002" />
        <param name="Value:1" value="" />
      </parameterslist>
    </node>
    <node name="UnBlockGPRSNode" object="Commander">
      <resultlist>
        <result value="" node="ResponseAssembler" />
      </resultlist>
      <parameterslist>
        <param name="CommandSource" value="Dictionary" />
        <param name="AppendSubscribersData" value="false" />
        <param name="Command" value="UnBlockGPRS" />
        <param name="DynamicObject" value="(empty)" />
      </parameterslist>
    </node>
    <node name="ExitDummyResponderNode" object="DummyResponder">
      <resultlist>
        <result value="" node="ResponseAssembler" />
      </resultlist>
      <parameterslist>
        <param name="OverallResult" value="SUCCESS" />
        <param name="DetailedResult" value="SUCCESS" />
        <param name="Delay" value="0" />
      </parameterslist>
    </node>
    <node name="ResponseAssembler" object="ResponseAssembler">
      <resultlist>
        <result value="" node="SingleSubscriberRequestDequeuer" />
      </resultlist>
    </node>
  </automat>
</scenario>