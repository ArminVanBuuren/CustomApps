<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\icon.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Txt_LRSettingsScheme_LogsDirectory" xml:space="preserve">
    <value>Directory path. File search is being made by all directories.</value>
  </data>
  <data name="Txt_LRSettingsScheme_MaxThreads" xml:space="preserve">
    <value>Maximum amount of threads. If the value is -1 then amount of threads corresponds to the ammount of processing files.</value>
  </data>
  <data name="Txt_LRSettingsScheme_MaxTraceLines" xml:space="preserve">
    <value>Maximum amount of lines for trace stack. Whole trace must be parsed by the "TraceParse" patterns.</value>
  </data>
  <data name="Txt_LRSettingsScheme_Servers" xml:space="preserve">
    <value>Servers for search. Specify with a comma.</value>
  </data>
  <data name="Txt_LRSettingsScheme_TraceParse" xml:space="preserve">
    <value>"Pattern" nodes - are used for read trace parameters. Selected from top to bottom, from the most accurate to the default. You must use groupings for set data items. Regular expression works only with options Singleline and CultureInvariant. Timeout execution - 10 seconds.
        Optional patterns: "StartTraceWith" and "EndTraceWith" - improve search speed because determine the exact verge trace. Options can be used individually, as well as in one setting.</value>
  </data>
  <data name="Txt_LRSettingsScheme_Types" xml:space="preserve">
    <value>File types, specify with a comma. A search on the content of the file name, extension included.</value>
  </data>
  <data name="Txt_LRSettings_Deserialize_Ex" xml:space="preserve">
    <value>Config "{0}" is incorrect! Moved to "{1}".

{2}</value>
  </data>
  <data name="Txt_LRSettings_PreviousSearchComment" xml:space="preserve">
    <value>Previous search value</value>
  </data>
  <data name="Txt_LRSettings_Serialize_Ex" xml:space="preserve">
    <value>Unable to save config to path "{0}".
{1}</value>
  </data>
  <data name="Txt_LRSettings_UseRegexComment" xml:space="preserve">
    <value>Regex search is being completed faster. "Encoding" atributte is used when reading log files.</value>
  </data>
  <data name="Txt_Form_DateFilterComment" xml:space="preserve">
    <value>"Date" filter</value>
  </data>
  <data name="Txt_Form_TraceNameFilterComment" xml:space="preserve">
    <value>"TraceName" filter to find a matching. Option turns off when value is empty. Several filters have to be listed with a comma. Case is ignored.</value>
  </data>
  <data name="Txt_Form_TraceFilterComment" xml:space="preserve">
    <value>"Trace" filter to find a matching. Option turns off when value is empty. Several filters have to be listed with a comma. Case is ignored.</value>
  </data>
  <data name="Txt_Form_AlreadyUseFilterComment" xml:space="preserve">
    <value>Search with filter</value>
  </data>
  <data name="Txt_LRSettingsScheme_OrderBy" xml:space="preserve">
    <value>Allowed sorting by fields: "ID", "Server", "TraceName", "Date", "File", "FoundLineID". "FoundLineID" is the line number in the file by found trace, is indicated with Description. With a comma you can sort the fields, and you can also use the "desc" function.</value>
  </data>
  <data name="Txt_LRSettingsScheme_RowsLimit" xml:space="preserve">
    <value>The limit on the count of lines. Reduces RAM usage.</value>
  </data>
  <data name="Txt_Form_SearchComment" xml:space="preserve">
    <value>Use options of invariant culture and ignoring the case. When Regex option of  search is used timeout of completing is 1 second.</value>
  </data>
  <data name="Txt_Form_trvMainComment" xml:space="preserve">
    <value>Server(s) and type(s) of the files must be chosen.</value>
  </data>
  <data name="clear1" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\clear1.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="filter17" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\filter17.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="find" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\find.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="reset2" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\reset2.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="save2" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\save2.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Txt_DataFilter_ErrDate" xml:space="preserve">
    <value>Date of end must be greater than date of start</value>
  </data>
  <data name="Txt_DataTemplate_ErrTimeout" xml:space="preserve">
    <value>Timeout while executing pattern: "{0}".
Timeout: {1}
Input data:
{2}</value>
  </data>
  <data name="Txt_LogsReaderForm_Contains" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="Txt_LogsReaderForm_FilesCompleted_1" xml:space="preserve">
    <value>Files completed:</value>
  </data>
  <data name="Txt_LogsReaderForm_FilesCompleted_2" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Txt_LogsReaderForm_NotContains" xml:space="preserve">
    <value>Not Contains</value>
  </data>
  <data name="Txt_LogsReaderForm_OverallFound_1" xml:space="preserve">
    <value>Overall found</value>
  </data>
  <data name="Txt_LogsReaderForm_OverallFound_2" xml:space="preserve">
    <value>matches</value>
  </data>
  <data name="Txt_LRSettingsScheme_ErrOrderBy" xml:space="preserve">
    <value>OrderBy item - '{0}' is incorrect! Please check.</value>
  </data>
  <data name="Txt_LRSettingsScheme_ErrRegex" xml:space="preserve">
    <value>Scheme '{0}' has incorrect Regex patterns in 'TraceParse' node. Please check.</value>
  </data>
  <data name="Txt_LRSettingsScheme_ErrUnique" xml:space="preserve">
    <value>Columns must be unique!</value>
  </data>
  <data name="Txt_LRSettings_ErrDeserialize" xml:space="preserve">
    <value>Deserialize Error</value>
  </data>
  <data name="Txt_LRSettings_ErrSerialize" xml:space="preserve">
    <value>Serialize Error</value>
  </data>
  <data name="Txt_LRSettings_ErrUnique" xml:space="preserve">
    <value>Schemes names must be unique!</value>
  </data>
  <data name="Txt_LRTraceParse_ErrPattern" xml:space="preserve">
    <value>Pattern "{0}" is incorrect!</value>
  </data>
  <data name="Txt_Main_ErrLoadScheme" xml:space="preserve">
    <value>Failed to load schema "{0}"
{1}</value>
  </data>
  <data name="Txt_Main_LoadScheme" xml:space="preserve">
    <value>Load scheme</value>
  </data>
  <data name="Txt_Initialization" xml:space="preserve">
    <value>Initialization</value>
  </data>
  <data name="Txt_LogsReaderForm_Clear" xml:space="preserve">
    <value>Clear [F6]</value>
  </data>
  <data name="Txt_LogsReaderForm_DateValueIsIncorrect" xml:space="preserve">
    <value>Date value is incorrect</value>
  </data>
  <data name="Txt_LogsReaderForm_DoesntMatchByPattern" xml:space="preserve">
    <value>Doesn't match by "TraceParse" patterns</value>
  </data>
  <data name="Txt_LogsReaderForm_ErrExport" xml:space="preserve">
    <value>Unable to save file "{0}". {1}</value>
  </data>
  <data name="Txt_LogsReaderForm_Export" xml:space="preserve">
    <value>Export [Ctrl+S]</value>
  </data>
  <data name="Txt_LogsReaderForm_Exporting" xml:space="preserve">
    <value>Exporting...</value>
  </data>
  <data name="Txt_LogsReaderForm_Filter" xml:space="preserve">
    <value>Filter [F7]</value>
  </data>
  <data name="Txt_LogsReaderForm_FilteTypes" xml:space="preserve">
    <value>File Types</value>
  </data>
  <data name="Txt_LogsReaderForm_FinishedIn" xml:space="preserve">
    <value>Finished in {0}</value>
  </data>
  <data name="Txt_LogsReaderForm_LogsFolder" xml:space="preserve">
    <value>Logs folder</value>
  </data>
  <data name="Txt_LogsReaderForm_MaxLines" xml:space="preserve">
    <value>Max Lines</value>
  </data>
  <data name="Txt_LogsReaderForm_NoFilterResultsFound" xml:space="preserve">
    <value>No filter results found</value>
  </data>
  <data name="Txt_LogsReaderForm_NoLogsFound" xml:space="preserve">
    <value>No logs found</value>
  </data>
  <data name="Txt_LogsReaderForm_OrderBy" xml:space="preserve">
    <value>Order By</value>
  </data>
  <data name="Txt_LogsReaderForm_Reset" xml:space="preserve">
    <value>Reset [F8]</value>
  </data>
  <data name="Txt_LogsReaderForm_RowsLimit" xml:space="preserve">
    <value>Rows Limit</value>
  </data>
  <data name="Txt_LogsReaderForm_Search" xml:space="preserve">
    <value>Search [F5]</value>
  </data>
  <data name="Txt_LogsReaderForm_Servers" xml:space="preserve">
    <value>Servers</value>
  </data>
  <data name="Txt_LogsReaderForm_Stop" xml:space="preserve">
    <value>Stop [Esc]</value>
  </data>
  <data name="Txt_LogsReaderForm_Stopping" xml:space="preserve">
    <value>Stopping...</value>
  </data>
  <data name="Txt_LogsReaderForm_SuccessExport" xml:space="preserve">
    <value>Successfully exported to file "{0}"</value>
  </data>
  <data name="Txt_LogsReaderForm_Types" xml:space="preserve">
    <value>Types</value>
  </data>
  <data name="Txt_LogsReaderForm_UseFilterWhenSearching" xml:space="preserve">
    <value>Use filter when searching</value>
  </data>
  <data name="Txt_LogsReaderForm_UseRegex" xml:space="preserve">
    <value>Use Regex</value>
  </data>
  <data name="Txt_LogsReaderForm_Working" xml:space="preserve">
    <value>Working...</value>
  </data>
  <data name="Txt_LogsReaderPerformer_IncorrectSearchPattern" xml:space="preserve">
    <value>Pattern "{0}" is incorrect for use as regular expression! Please check.</value>
  </data>
  <data name="Txt_LogsReaderPerformer_NoFilesLogsFound" xml:space="preserve">
    <value>No files logs found</value>
  </data>
  <data name="Txt_LogsReaderPerformer_SessionAlreadyCompleted" xml:space="preserve">
    <value>Current session already completed!</value>
  </data>
  <data name="Txt_LogsReaderPerformer_SessionStopped" xml:space="preserve">
    <value>Session was stopped</value>
  </data>
  <data name="LogsReaderForm_alreadyUseFilter_rightPadding" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="LogsReaderForm_btnClear_Width" xml:space="preserve">
    <value>90</value>
  </data>
  <data name="LogsReaderForm_buttonExport_Width" xml:space="preserve">
    <value>110</value>
  </data>
  <data name="LogsReaderForm_buttonFilter_rightPadding" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="LogsReaderForm_buttonReset_rightPadding" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="Txt_LogsReaderForm_MaxThreads" xml:space="preserve">
    <value>Max Threads</value>
  </data>
  <data name="Txt_LogsReaderForm_Servers2" xml:space="preserve">
    <value>Servers</value>
  </data>
  <data name="Txt_LogsReaderForm_ExportComment" xml:space="preserve">
    <value>Export found or filtered data to csv file</value>
  </data>
  <data name="Txt_LogsReaderForm_Description" xml:space="preserve">
    <value>This is a universal application for searching and parsing applications logs, as well as convenient viewing.</value>
  </data>
</root>