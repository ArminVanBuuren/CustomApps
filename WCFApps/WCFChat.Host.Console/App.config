<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<appSettings>
		<add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
	</appSettings>
	<system.web>
		<compilation debug="true" targetFramework="4.5" />
		<httpRuntime targetFramework="4.5"/>
	</system.web>
  <system.serviceModel>

    <behaviors>
      <serviceBehaviors>
        <behavior name="chatServiceBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
          <serviceThrottling maxConcurrentCalls="2147483647" maxConcurrentSessions="2147483647"/>
          <serviceTimeouts transactionTimeout="00:16:00"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>


    <services>

	    <!--<service name="WCFChat.Host.Console.MainServer" behaviorConfiguration="chatServiceBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8040/Services/Main"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsDualHttpBinding" bindingConfiguration="httpBinding" bindingNamespace="http://localhost/services/server" contract="WCFChat.Contracts.IMainContract"/>

        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>

      <service name="WCFChat.Host.Console.ClientServer" behaviorConfiguration="chatServiceBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8040/Services/Chat"/>
          </baseAddresses>
        </host>
        <endpoint address="" binding="wsDualHttpBinding" bindingConfiguration="httpBinding" bindingNamespace="http://localhost/services/chat"  contract="WCFChat.Contracts.IChat"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>-->

      <service name="WCFChat.Service.MainServer" behaviorConfiguration="chatServiceBehavior">
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8040/"/>
          </baseAddresses>
        </host>
        <endpoint address="MainServer" binding="wsDualHttpBinding" bindingConfiguration="httpBinding" bindingNamespace="http://localhost/services" contract="WCFChat.Contracts.IMainContract"/>
        <endpoint address="ChatServer" binding="wsDualHttpBinding" bindingConfiguration="httpBinding" bindingNamespace="http://localhost/services" contract="WCFChat.Contracts.IChat"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
      
      
    </services>


    <bindings>
      <wsDualHttpBinding>
        <!-- Значение ReceiveTimeout используется на уровне платформы службы для инициализации времени ожидания бездействующего сеанса. Это время ожидания определяет, как долго сеанс может находиться в бездействии до истечения времени ожидания. -->
        <!-- OpenTimeout это время, которое вы готовы подождать, когда вы откроете соединение с вашей службой WCF. Возвращает или задает интервал времени для открытия подключения до того, как транспорт создаст исключение. -->
        <!-- CloseTimeout это время, когда вы закрываете соединение (удаляете клиентский прокси), который вы будете ждать до того, как будет создано исключение. Возвращает или задает интервал времени для закрытия подключения до того, как транспорт создаст исключение. -->
        <!-- Наиболее важным является sendTimeout, в котором говорится, как долго клиент будет ждать ответа от вашей службы WCF -->
        <!-- Best without DEBUG closeTimeout="00:00:10" openTimeout="00:00:10" receiveTimeout="23:59:59" sendTimeout="00:00:10"  -->
        <binding name="httpBinding"
                 maxReceivedMessageSize="67108864"
                 maxBufferPoolSize="67108864"
                 closeTimeout="00:00:11" openTimeout="00:00:12" receiveTimeout="23:59:59" sendTimeout="00:00:13" >
          <security mode="None">
          </security>
          <readerQuotas maxArrayLength="67108864"
                        maxBytesPerRead="67108864"
                        maxStringContentLength="67108864" />
          <reliableSession  inactivityTimeout="00:20:00"/>
        </binding>
      </wsDualHttpBinding>
    </bindings>
    
  </system.serviceModel>
</configuration>