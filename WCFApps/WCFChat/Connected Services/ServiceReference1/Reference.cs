//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFChat.Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCFChat.Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CloudNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GUIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CloudName {
            get {
                return this.CloudNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CloudNameField, value) != true)) {
                    this.CloudNameField = value;
                    this.RaisePropertyChanged("CloudName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GUID {
            get {
                return this.GUIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GUIDField, value) != true)) {
                    this.GUIDField = value;
                    this.RaisePropertyChanged("GUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cloud", Namespace="http://schemas.datacontract.org/2004/07/WCFChat.Service")]
    [System.SerializableAttribute()]
    public partial class Cloud : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CloudResult", Namespace="http://schemas.datacontract.org/2004/07/WCFChat.Service")]
    public enum CloudResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUCCESS = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAILURE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CloudNotFound = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CloudIsBusy = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YourRequestInProgress = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/services/server", ConfigurationName="ServiceReference1.IMainContract", CallbackContract=typeof(WCFChat.Client.ServiceReference1.IMainContractCallback))]
    public interface IMainContract {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/CreateCloud")]
        void CreateCloud(WCFChat.Client.ServiceReference1.User user, WCFChat.Client.ServiceReference1.Cloud cloud, string transactionID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/CreateCloud")]
        System.Threading.Tasks.Task CreateCloudAsync(WCFChat.Client.ServiceReference1.User user, WCFChat.Client.ServiceReference1.Cloud cloud, string transactionID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/Unbind")]
        void Unbind(string transactionID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/Unbind")]
        System.Threading.Tasks.Task UnbindAsync(string transactionID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/GetCloud")]
        void GetCloud(WCFChat.Client.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/GetCloud")]
        System.Threading.Tasks.Task GetCloudAsync(WCFChat.Client.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/RequestForAccessResult")]
        void RequestForAccessResult(WCFChat.Client.ServiceReference1.CloudResult result, WCFChat.Client.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/RequestForAccessResult")]
        System.Threading.Tasks.Task RequestForAccessResultAsync(WCFChat.Client.ServiceReference1.CloudResult result, WCFChat.Client.ServiceReference1.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/CreateCloudResult")]
        void CreateCloudResult(WCFChat.Client.ServiceReference1.CloudResult result, string transactionID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/UnbindResult")]
        void UnbindResult(WCFChat.Client.ServiceReference1.CloudResult result, string transactionID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/RequestForAccess")]
        void RequestForAccess(WCFChat.Client.ServiceReference1.User user, string address);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://localhost/services/server/IMainContract/GetCloudResult")]
        void GetCloudResult(WCFChat.Client.ServiceReference1.CloudResult result, WCFChat.Client.ServiceReference1.Cloud cloud);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainContractChannel : WCFChat.Client.ServiceReference1.IMainContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainContractClient : System.ServiceModel.DuplexClientBase<WCFChat.Client.ServiceReference1.IMainContract>, WCFChat.Client.ServiceReference1.IMainContract {
        
        public MainContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MainContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MainContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MainContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MainContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void CreateCloud(WCFChat.Client.ServiceReference1.User user, WCFChat.Client.ServiceReference1.Cloud cloud, string transactionID) {
            base.Channel.CreateCloud(user, cloud, transactionID);
        }
        
        public System.Threading.Tasks.Task CreateCloudAsync(WCFChat.Client.ServiceReference1.User user, WCFChat.Client.ServiceReference1.Cloud cloud, string transactionID) {
            return base.Channel.CreateCloudAsync(user, cloud, transactionID);
        }
        
        public void Unbind(string transactionID) {
            base.Channel.Unbind(transactionID);
        }
        
        public System.Threading.Tasks.Task UnbindAsync(string transactionID) {
            return base.Channel.UnbindAsync(transactionID);
        }
        
        public void GetCloud(WCFChat.Client.ServiceReference1.User user) {
            base.Channel.GetCloud(user);
        }
        
        public System.Threading.Tasks.Task GetCloudAsync(WCFChat.Client.ServiceReference1.User user) {
            return base.Channel.GetCloudAsync(user);
        }
        
        public void RequestForAccessResult(WCFChat.Client.ServiceReference1.CloudResult result, WCFChat.Client.ServiceReference1.User user) {
            base.Channel.RequestForAccessResult(result, user);
        }
        
        public System.Threading.Tasks.Task RequestForAccessResultAsync(WCFChat.Client.ServiceReference1.CloudResult result, WCFChat.Client.ServiceReference1.User user) {
            return base.Channel.RequestForAccessResultAsync(result, user);
        }
    }
}
